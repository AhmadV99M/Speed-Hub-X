local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v81 = v2(v0(v30, 16));
			if v19 then
				local v90 = v5(v81, v19);
				v19 = nil;
				return v90;
			else
				return v81;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v82 = (v31 / (2 ^ (v32 - (2 - 1)))) % ((5 - 3) ^ (((v33 - (1 - 0)) - (v32 - 1)) + (2 - 1)));
			return v82 - (v82 % (620 - (555 + 64)));
		else
			local v83 = 931 - (857 + 74);
			local v84;
			while true do
				if (v83 == ((2205 - (1523 + 114)) - ((1244 - (282 + 595)) + 201))) then
					v84 = (929 - (214 + 713)) ^ (v32 - (1 + 0));
					return (((v31 % (v84 + v84)) >= v84) and (1 + 0 + 0)) or 0;
				end
			end
		end
	end
	local function v21()
		local v34 = 0 - 0;
		local v35;
		while true do
			if (v34 == 0) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (1066 - (68 + 997));
				v34 = 1271 - (226 + (1161 - (32 + 85)));
			end
			if (v34 == (4 - 3)) then
				return v35;
			end
		end
	end
	local function v22()
		local v36, v37 = v1(v16, v18, v18 + 2 + 0);
		v18 = v18 + 1 + 1;
		return (v37 * (1213 - (892 + 65))) + v36;
	end
	local function v23()
		local v38 = 0 - 0;
		local v39;
		local v40;
		local v41;
		local v42;
		while true do
			if (v38 == ((0 + 0) - 0)) then
				v39, v40, v41, v42 = v1(v16, v18, v18 + (4 - (3 - 2)));
				v18 = v18 + ((1306 - (802 + 150)) - (87 + 263));
				v38 = 1;
			end
			if (v38 == (181 - (67 + 113))) then
				return (v42 * (45169940 - 28392724)) + (v41 * (48056 + 17480)) + (v40 * (628 - 372)) + v39;
			end
		end
	end
	local function v24()
		local v43 = v23();
		local v44 = v23();
		local v45 = 1 - 0;
		local v46 = (v20(v44, 1 + 0, 1017 - (915 + 82)) * (2 ^ (90 - 58))) + v43;
		local v47 = v20(v44, 13 + 8, (70 - 30) - 9);
		local v48 = ((v20(v44, 32) == (1188 - (1069 + 118))) and -(2 - 1)) or ((439 - (145 + 293)) - 0);
		if (v47 == (0 + 0)) then
			if (v46 == (0 - 0)) then
				return v48 * (0 + 0);
			else
				v47 = 792 - ((798 - (44 + 386)) + 423);
				v45 = 0 - (1486 - (998 + 488));
			end
		elseif (v47 == (2065 - (10 + 8))) then
			return ((v46 == (0 - 0)) and (v48 * ((443 - (416 + 26)) / (0 - 0)))) or (v48 * NaN);
		end
		return v8(v48, v47 - 1023) * (v45 + (v46 / ((1 + 0 + 1) ^ 52)));
	end
	local function v25(v49)
		local v50 = 0;
		local v51;
		local v52;
		while true do
			if (v50 == 1) then
				v51 = v3(v16, v18, (v18 + v49) - (1 + 0 + 0));
				v18 = v18 + v49;
				v50 = 774 - (201 + 571);
			end
			if (v50 == (1141 - (116 + 1022))) then
				return v6(v52);
			end
			if ((0 - 0) == v50) then
				v51 = nil;
				if not v49 then
					local v100 = 0 + 0;
					while true do
						if (v100 == (0 - 0)) then
							v49 = v23();
							if (v49 == (0 - 0)) then
								return "";
							end
							break;
						end
					end
				end
				v50 = 860 - (814 + 45);
			end
			if (v50 == ((889 - (261 + 624)) - 2)) then
				v52 = {};
				for v91 = 1 + (0 - 0), #v51 do
					v52[v91] = v2(v1(v3(v51, v91, v91)));
				end
				v50 = 3;
			end
		end
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v53 = (function()
			return 0 - 0;
		end)();
		local v54 = (function()
			return;
		end)();
		local v55 = (function()
			return;
		end)();
		local v56 = (function()
			return;
		end)();
		local v57 = (function()
			return;
		end)();
		local v58 = (function()
			return;
		end)();
		local v59 = (function()
			return;
		end)();
		local v60 = (function()
			return;
		end)();
		while true do
			if (v53 == (2 - 0)) then
				local v87 = (function()
					return 0 - 0;
				end)();
				while true do
					if (v87 == (1825 - (1195 + 629))) then
						v58[#"19("] = (function()
							return v21();
						end)();
						v53 = (function()
							return 3 - 0;
						end)();
						break;
					end
					if (v87 ~= (241 - (187 + 54))) then
					else
						v60 = (function()
							return {};
						end)();
						for v114 = #"[", v59 do
							local v115 = (function()
								return 0;
							end)();
							local v116 = (function()
								return;
							end)();
							local v117 = (function()
								return;
							end)();
							local v118 = (function()
								return;
							end)();
							while true do
								if (v115 == 0) then
									v116 = (function()
										return 780 - (162 + 618);
									end)();
									v117 = (function()
										return nil;
									end)();
									v115 = (function()
										return 1;
									end)();
								end
								if (v115 == 1) then
									v118 = (function()
										return nil;
									end)();
									while true do
										if ((1 + 0) == v116) then
											if (v117 == #",") then
												v118 = (function()
													return v21() ~= (0 + 0);
												end)();
											elseif (v117 == (3 - 1)) then
												v118 = (function()
													return v24();
												end)();
											elseif (v117 == #"91(") then
												v118 = (function()
													return v25();
												end)();
											end
											v60[v114] = (function()
												return v118;
											end)();
											break;
										end
										if (v116 ~= 0) then
										else
											local v130 = (function()
												return 0;
											end)();
											while true do
												if (v130 ~= 0) then
												else
													v117 = (function()
														return v21();
													end)();
													v118 = (function()
														return nil;
													end)();
													v130 = (function()
														return 1 - 0;
													end)();
												end
												if (v130 == (1 + 0)) then
													v116 = (function()
														return 1;
													end)();
													break;
												end
											end
										end
									end
									break;
								end
							end
						end
						v87 = (function()
							return 1;
						end)();
					end
				end
			end
			if (3 == v53) then
				for v93 = #"<", v23() do
					local v94 = (function()
						return v21();
					end)();
					if (v20(v94, #">", #"}") == (1636 - (1373 + 263))) then
						local v109 = (function()
							return 0;
						end)();
						local v110 = (function()
							return;
						end)();
						local v111 = (function()
							return;
						end)();
						local v112 = (function()
							return;
						end)();
						local v113 = (function()
							return;
						end)();
						while true do
							if (v109 ~= (1000 - (451 + 549))) then
							else
								local v119 = (function()
									return 0 + 0;
								end)();
								local v120 = (function()
									return;
								end)();
								while true do
									if (v119 == (0 - 0)) then
										v120 = (function()
											return 0 - 0;
										end)();
										while true do
											if (v120 == (1384 - (746 + 638))) then
												v110 = (function()
													return 0;
												end)();
												v111 = (function()
													return nil;
												end)();
												v120 = (function()
													return 1;
												end)();
											end
											if (v120 == (1 + 0)) then
												v109 = (function()
													return 1;
												end)();
												break;
											end
										end
										break;
									end
								end
							end
							if (v109 == 2) then
								while true do
									if (#"}" == v110) then
										local v122 = (function()
											return 0 - 0;
										end)();
										local v123 = (function()
											return;
										end)();
										while true do
											if (0 == v122) then
												v123 = (function()
													return 341 - (218 + 123);
												end)();
												while true do
													if (v123 ~= 1) then
													else
														v110 = (function()
															return 2;
														end)();
														break;
													end
													if (v123 ~= (1581 - (1535 + 46))) then
													else
														v113 = (function()
															return {v22(),v22(),nil,nil};
														end)();
														if (v111 == 0) then
															local v314 = (function()
																return 0 + 0;
															end)();
															local v315 = (function()
																return;
															end)();
															while true do
																if (v314 ~= 0) then
																else
																	v315 = (function()
																		return 0;
																	end)();
																	while true do
																		if (v315 == (0 + 0)) then
																			v113[#"xnx"] = (function()
																				return v22();
																			end)();
																			v113[#"0836"] = (function()
																				return v22();
																			end)();
																			break;
																		end
																	end
																	break;
																end
															end
														elseif (v111 == #"]") then
															v113[#"xxx"] = (function()
																return v23();
															end)();
														elseif (v111 == (562 - (306 + 254))) then
															v113[#"xnx"] = (function()
																return v23() - ((1 + 1) ^ (30 - 14));
															end)();
														elseif (v111 ~= #"nil") then
														else
															local v558 = (function()
																return 1467 - (899 + 568);
															end)();
															local v559 = (function()
																return;
															end)();
															while true do
																if (v558 == 0) then
																	v559 = (function()
																		return 0;
																	end)();
																	while true do
																		if (v559 == 0) then
																			v113[#"19("] = (function()
																				return v23() - ((2 + 0) ^ (38 - 22));
																			end)();
																			v113[#"?id="] = (function()
																				return v22();
																			end)();
																			break;
																		end
																	end
																	break;
																end
															end
														end
														v123 = (function()
															return 1;
														end)();
													end
												end
												break;
											end
										end
									end
									if (v110 == 0) then
										local v124 = (function()
											return 0;
										end)();
										local v125 = (function()
											return;
										end)();
										while true do
											if (v124 == 0) then
												v125 = (function()
													return 0;
												end)();
												while true do
													if (v125 == 0) then
														v111 = (function()
															return v20(v94, 2, #"gha");
														end)();
														v112 = (function()
															return v20(v94, #"0313", 6);
														end)();
														v125 = (function()
															return 604 - (268 + 335);
														end)();
													end
													if (v125 == (291 - (60 + 230))) then
														v110 = (function()
															return #"|";
														end)();
														break;
													end
												end
												break;
											end
										end
									end
									if (#"gha" ~= v110) then
									else
										if (v20(v112, #"xxx", #"-19") ~= #",") then
										else
											v113[#"asd1"] = (function()
												return v60[v113[#"0313"]];
											end)();
										end
										v55[v93] = (function()
											return v113;
										end)();
										break;
									end
									if (v110 == 2) then
										local v127 = (function()
											return 0;
										end)();
										local v128 = (function()
											return;
										end)();
										while true do
											if (v127 == 0) then
												v128 = (function()
													return 572 - (426 + 146);
												end)();
												while true do
													if (v128 == (0 + 0)) then
														if (v20(v112, #"]", #"<") ~= #" ") then
														else
															v113[2] = (function()
																return v60[v113[1458 - (282 + 1174)]];
															end)();
														end
														if (v20(v112, 813 - (569 + 242), 5 - 3) ~= #"]") then
														else
															v113[#"-19"] = (function()
																return v60[v113[#"nil"]];
															end)();
														end
														v128 = (function()
															return 1 + 0;
														end)();
													end
													if (1 ~= v128) then
													else
														v110 = (function()
															return #"91(";
														end)();
														break;
													end
												end
												break;
											end
										end
									end
								end
								break;
							end
							if (v109 == (1025 - (706 + 318))) then
								v112 = (function()
									return nil;
								end)();
								v113 = (function()
									return nil;
								end)();
								v109 = (function()
									return 1253 - (721 + 530);
								end)();
							end
						end
					end
				end
				for v95 = #"<", v23() do
					v56, v95, v28 = (function()
						return v54(v56, v95, v28);
					end)();
				end
				return v58;
			end
			if (v53 == (1271 - (945 + 326))) then
				v54 = (function()
					return function(v101, v102, v103)
						local v104 = (function()
							return 0;
						end)();
						local v105 = (function()
							return;
						end)();
						while true do
							if ((0 - 0) ~= v104) then
							else
								v105 = (function()
									return 0 + 0;
								end)();
								while true do
									if (v105 == 0) then
										v101[v102 - #"!"] = (function()
											return v103();
										end)();
										return v101, v102, v103;
									end
								end
								break;
							end
						end
					end;
				end)();
				v55 = (function()
					return {};
				end)();
				v56 = (function()
					return {};
				end)();
				v53 = (function()
					return 701 - (271 + 429);
				end)();
			end
			if (1 == v53) then
				local v88 = (function()
					return 0;
				end)();
				local v89 = (function()
					return;
				end)();
				while true do
					if (v88 == 0) then
						v89 = (function()
							return 0;
						end)();
						while true do
							if (v89 == (0 + 0)) then
								v57 = (function()
									return {};
								end)();
								v58 = (function()
									return {v55,v56,nil,v57};
								end)();
								v89 = (function()
									return 1;
								end)();
							end
							if (v89 ~= 1) then
							else
								v59 = (function()
									return v23();
								end)();
								v53 = (function()
									return 1088 - (461 + 625);
								end)();
								break;
							end
						end
						break;
					end
				end
			end
		end
	end
	local function v29(v61, v62, v63)
		local v64 = v61[1 + 0];
		local v65 = v61[1290 - (993 + 295)];
		local v66 = v61[2 + 1];
		return function(...)
			local v67 = v64;
			local v68 = v65;
			local v69 = v66;
			local v70 = v27;
			local v71 = 1 + 0;
			local v72 = -((409 + 763) - (418 + 753));
			local v73 = {};
			local v74 = {...};
			local v75 = v12("#", ...) - (1415 - (1001 + 413));
			local v76 = {};
			local v77 = {};
			for v85 = 0 + 0, v75 do
				if ((v85 >= v69) or (2032 < 653)) then
					v73[v85 - v69] = v74[v85 + 1 + 0];
				else
					v77[v85] = v74[v85 + (694 - (627 + 66))];
				end
			end
			local v78 = (v75 - v69) + 1 + 0;
			local v79;
			local v80;
			while true do
				local v86 = 0 + 0;
				while true do
					if (v86 == (529 - (406 + 123))) then
						v79 = v67[v71];
						v80 = v79[718 - (373 + 344)];
						v86 = 1 + 0;
					end
					if (v86 == (1 + 0)) then
						if ((v80 <= (1838 - ((5124 - 3375) + 20))) or (3892 > 3963)) then
							if (v80 <= ((10 - 1) + 25)) then
								if (v80 <= (1115 - (35 + 1064))) then
									if (v80 <= ((25 - 19) + 1)) then
										if (v80 <= (1325 - (1249 + 73))) then
											if ((4012 == 4012) and (v80 <= ((1 - 0) + 0))) then
												if (v80 > (0 + (0 - 0))) then
													v77[v79[1147 - (466 + 679)]] = v77[v79[6 - 3]] * v77[v79[11 - 7]];
												elseif (v77[v79[1902 - ((245 - (43 + 96)) + 1794)]] == v77[v79[(8 - 6) + (3 - 1)]]) then
													v71 = v71 + 1 + 0;
												else
													v71 = v79[8 - (5 + 0)];
												end
											elseif ((3807 >= 1276) and (v80 > 2)) then
												local v133 = 0 - 0;
												local v134;
												local v135;
												local v136;
												local v137;
												while true do
													if (v133 == (114 - (4 + 110))) then
														v134 = v79[2];
														v135, v136 = v70(v77[v134](v77[v134 + (585 - (57 + 149 + 378))]));
														v133 = (2822 - 1394) - (41 + 532 + 854);
													end
													if (v133 == (105 - (17 + 86))) then
														for v489 = v134, v72 do
															v137 = v137 + 1 + 0;
															v77[v489] = v135[v137];
														end
														break;
													end
													if (v133 == (1 + 0)) then
														v72 = (v136 + v134) - (1 - 0);
														v137 = 0 - 0;
														v133 = 168 - (122 + 44);
													end
												end
											else
												local v138 = 0 - 0;
												local v139;
												local v140;
												local v141;
												while true do
													if (v138 == (3 - (3 - 1))) then
														v141 = v79[1371 - (34 + 1334)];
														for v492 = 1 + 0 + 0, v141 do
															v140[v492] = v77[v139 + v492];
														end
														break;
													end
													if (v138 == (0 + 0)) then
														v139 = v79[1 + 1];
														v140 = v77[v139];
														v138 = 1 - 0;
													end
												end
											end
										elseif (v80 <= (70 - (30 + 35))) then
											if (v80 > (3 + 1)) then
												v77[v79[1259 - (1043 + 214)]]();
											else
												local v142 = v79[(1 + 6) - 5];
												v77[v142](v13(v77, v142 + (1213 - (323 + 889)), v79[7 - 4]));
											end
										elseif ((2220 <= 4361) and (v80 > 6)) then
											if (v79[582 - (361 + 219)] < v77[v79[324 - (53 + (2018 - (1414 + 337)))]]) then
												v71 = v71 + 1 + 0;
											else
												v71 = v79[416 - (15 + 398)];
											end
										else
											v77[v79[1174 - (786 + 386)]] = {};
										end
									elseif (v80 <= (35 - 24)) then
										if ((228 == 228) and (v80 <= (1388 - (1055 + 324)))) then
											if ((v80 > (990 - ((1958 - (1642 + 298)) + (2512 - 1548)))) or (4118 <= 3578)) then
												v77[v79[7 - 5]][v79[(5 - 3) + 1]] = v79[15 - 11];
											else
												local v146 = 0 - 0;
												local v147;
												local v148;
												while true do
													if (v146 == 0) then
														v147 = v79[8 - 5];
														v148 = v77[v147];
														v146 = 1 + 0;
													end
													if (v146 == ((2525 - 1674) - (20 + 830))) then
														for v495 = v147 + 1 + 0 + 0, v79[13 - (8 + 1)] do
															v148 = v148 .. v77[v495];
														end
														v77[v79[2]] = v148;
														break;
													end
												end
											end
										elseif (v80 == (136 - (116 + (982 - (357 + 615))))) then
											if ((v77[v79[1 + 1]] ~= v77[v79[692 - (364 + 324)]]) or (2915 < 1909)) then
												v71 = v71 + (739 - (542 + 196));
											else
												v71 = v79[6 - 3];
											end
										else
											local v149 = v79[1 + 1];
											local v150 = v77[v149];
											local v151 = v79[2 + 1];
											for v318 = 1 + 0, v151 do
												v150[v318] = v77[v149 + v318];
											end
										end
									elseif ((634 <= 2275) and (v80 <= (33 - 20))) then
										if ((1091 <= 2785) and (v80 == (30 - 18))) then
											local v152 = v79[(1091 + 462) - (1126 + 425)];
											local v153, v154 = v70(v77[v152](v13(v77, v152 + (406 - (118 + 287)), v79[11 - 8])));
											v72 = (v154 + v152) - (1122 - (118 + 1003));
											local v155 = 0 - 0;
											for v321 = v152, v72 do
												v155 = v155 + (378 - (142 + 235));
												v77[v321] = v153[v155];
											end
										else
											v77[v79[9 - 7]] = v77[v79[1 + 2]] / v79[981 - (553 + 424)];
										end
									elseif ((4638 >= 2840) and (v80 <= ((63 - 37) - (11 + 1)))) then
										for v324 = v79[2 + 0], v79[3 + 0] do
											v77[v324] = nil;
										end
									elseif (v80 == (9 + 6)) then
										v77[v79[1 + 1]] = v77[v79[2 + 1]] - v77[v79[(16 - 8) - 4]];
									else
										local v367 = v79[5 - (3 + 0)];
										local v368 = v77[v367];
										local v369 = v77[v367 + 1 + 1];
										if ((v369 > (0 - (0 + 0))) or (1292 > 4414)) then
											if ((3511 == 3511) and (v368 > v77[v367 + 1 + 0])) then
												v71 = v79[14 - 11];
											else
												v77[v367 + (756 - (239 + 514))] = v368;
											end
										elseif (v368 < v77[v367 + 1 + (1301 - (384 + 917))]) then
											v71 = v79[(2029 - (128 + 569)) - (797 + 532)];
										else
											v77[v367 + (1996 - (1238 + 755))] = v368;
										end
									end
								elseif ((2132 == 2132) and (v80 <= (19 + 6))) then
									if (v80 <= (7 + 13)) then
										if (v80 <= ((1575 - (1407 + 136)) - (1901 - (687 + 1200)))) then
											if (v80 == (39 - 22)) then
												local v157 = v79[1204 - (373 + 829)];
												v77[v157] = v77[v157](v77[v157 + (865 - (196 + 668))]);
											elseif ((932 <= 3972) and (v79[733 - (476 + 255)] == v77[v79[7 - 3]])) then
												v71 = v71 + (834 - (171 + 662));
											else
												v71 = v79[1133 - ((2079 - (556 + 1154)) + 761)];
											end
										elseif (v80 > (66 - 47)) then
											v77[v79[1 + 1]] = v77[v79[2 + 1]] % v77[v79[6 - (6 - 4)]];
										else
											do
												return v77[v79[3 - 1]]();
											end
										end
									elseif (v80 <= (1475 - (28 + 1425))) then
										if (v80 > (259 - (64 + 174))) then
											do
												return v77[v79[2]];
											end
										elseif (v77[v79[2]] ~= v79[(96 - (9 + 86)) + 3]) then
											v71 = v71 + ((422 - (275 + 146)) - (0 + 0));
										else
											v71 = v79[339 - (144 + (256 - (29 + 35)))];
										end
									elseif ((v80 <= (239 - (42 + 174))) or (4560 <= 2694)) then
										v77[v79[2 + 0]] = v77[v79[3 + 0]][v77[v79[2 + 2]]];
									elseif ((v80 > (1528 - (363 + 1141))) or (2531 >= 3969)) then
										if (v79[1582 - (1183 + 397)] < v77[v79[11 - 7]]) then
											v71 = v71 + 1 + 0;
										else
											v71 = v79[3 + 0];
										end
									else
										v77[v79[1977 - ((8478 - 6565) + 62)]] = v77[v79[2 + 1]] + v77[v79[10 - 6]];
									end
								elseif (v80 <= (1962 - (565 + (4085 - 2717)))) then
									if (v80 <= (101 - 74)) then
										if (v80 == (1687 - ((6520 - 5043) + 184))) then
											v77[v79[2 - 0]] = v77[v79[3 + 0]] % v79[860 - (564 + 292)];
										else
											v71 = v79[3];
										end
									elseif ((v80 == 28) or (738 > 2193)) then
										local v164 = (0 + 0) - (1012 - (53 + 959));
										local v165;
										local v166;
										local v167;
										while true do
											if (v164 == (2 - 0)) then
												for v497 = 2 - 1, v79[308 - (244 + (468 - (312 + 96)))] do
													v71 = v71 + (1207 - (741 + 465));
													local v498 = v67[v71];
													if (v498[1 + (0 - 0)] == (601 - (41 + 435))) then
														v167[v497 - (1 + 0)] = {v77,v498[1128 - (936 + 189)]};
													else
														v167[v497 - (1 + 0)] = {v62,v498[1 + 2]};
													end
													v76[#v76 + 1 + 0] = v167;
												end
												v77[v79[2]] = v29(v165, v166, v63);
												break;
											end
											if (v164 == (1138 - (782 + 356))) then
												v165 = v68[v79[270 - (176 + 91)]];
												v166 = nil;
												v164 = 2 - 1;
											end
											if (v164 == (2 - 1)) then
												v167 = {};
												v166 = v10({}, {__index=function(v500, v501)
													local v502 = v167[v501];
													return v502[1 - 0][v502[2 + 0]];
												end,__newindex=function(v503, v504, v505)
													local v506 = 1092 - (975 + 117);
													local v507;
													while true do
														if ((4606 >= 3398) and (v506 == (1875 - (157 + 1718)))) then
															v507 = v167[v504];
															v507[1 + 0][v507[6 - 4]] = v505;
															break;
														end
													end
												end});
												v164 = 6 - 4;
											end
										end
									elseif (v77[v79[1020 - (697 + 321)]] < v77[v79[4 + 0]]) then
										v71 = v71 + (2 - 1);
									else
										v71 = v79[5 - 2];
									end
								elseif (v80 <= (95 - 64)) then
									if ((1853 > 1742) and (v80 == (69 - 39))) then
										local v168 = v77[v79[2 + 2]];
										if not v168 then
											v71 = v71 + (1 - 0);
										else
											local v374 = 0 - 0;
											while true do
												if ((v374 == ((2126 - (813 + 86)) - (322 + 905))) or (2442 > 2564)) then
													v77[v79[613 - (602 + 9 + 0)]] = v168;
													v71 = v79[1192 - (449 + 740)];
													break;
												end
											end
										end
									else
										local v169 = 872 - ((1529 - 703) + 46);
										local v170;
										local v171;
										local v172;
										while true do
											if ((0 - 0) == v169) then
												v170 = v79[949 - (245 + 702)];
												v171 = {v77[v170](v13(v77, v170 + (1 - 0), v72))};
												v169 = 2 - 1;
											end
											if ((1 + (492 - (18 + 474))) == v169) then
												v172 = 1898 - (260 + 1638);
												for v508 = v170, v79[444 - (382 + 58)] do
													v172 = v172 + (3 - 2);
													v77[v508] = v171[v172];
												end
												break;
											end
										end
									end
								elseif (v80 <= 32) then
									v77[v79[2]] = v77[v79[2 + 1 + 0]] - v77[v79[8 - (12 - 8)]];
								elseif (v80 == (97 - 64)) then
									local v375 = v79[1207 - (902 + 303)];
									local v376 = {v77[v375](v13(v77, v375 + (2 - 1), v79[1 + 2]))};
									local v377 = 0;
									for v453 = v375, v79[1694 - ((1424 - (121 + 182)) + 569)] do
										v377 = v377 + (215 - (22 + 192));
										v77[v453] = v376[v377];
									end
								elseif (v77[v79[685 - (483 + 200)]] == v79[1467 - (173 + 1231 + 59)]) then
									v71 = v71 + (2 - 1);
								else
									v71 = v79[1320 - (486 + 831)];
								end
							elseif (v80 <= (68 - 17)) then
								if (v80 <= (807 - (468 + 297))) then
									if (v80 <= ((1840 - (988 + 252)) - (38 + 296 + 72 + 156))) then
										if ((4374 >= 4168) and (v80 <= (121 - 85))) then
											if (v80 == (81 - 46)) then
												if (v79[2 - 0] <= v77[v79[2 + (1972 - (49 + 1921))]]) then
													v71 = v71 + (237 - (141 + 95));
												else
													v71 = v79[(893 - (223 + 667)) + 0];
												end
											else
												v77[v79[4 - 2]] = v77[v79[6 - 3]] / v79[1948 - (1129 + 815)];
											end
										elseif (v80 > ((476 - (51 + 1)) - (371 + (27 - 11)))) then
											local v175 = v79[(1 - 0) + 1];
											local v176 = {v77[v175](v77[v175 + 1 + 0])};
											local v177 = 0 + 0;
											for v326 = v175, v79[5 - 1] do
												v177 = v177 + 1 + 0;
												v77[v326] = v176[v177];
											end
										else
											v77[v79[165 - (92 + 71)]] = v63[v79[2 + 1]];
										end
									elseif (v80 <= (67 - 27)) then
										if (v80 > 39) then
											local v180 = 765 - (574 + 191);
											local v181;
											while true do
												if ((v180 == (1083 - (286 + 797))) or (4576 > 4938)) then
													v181 = v79[2 + 0];
													v77[v181] = v77[v181](v13(v77, v181 + (2 - (1126 - (146 + 979))), v79[3]));
													break;
												end
											end
										else
											local v182 = v79[1 + 1 + 0];
											local v183, v184 = v70(v77[v182](v13(v77, v182 + (850 - (254 + (1200 - (311 + 294)))), v72)));
											v72 = (v184 + v182) - (127 - (55 + 71));
											local v185 = 0;
											for v329 = v182, v72 do
												v185 = v185 + 1;
												v77[v329] = v183[v185];
											end
										end
									elseif (v80 == (53 - 12)) then
										if ((2930 > 649) and v77[v79[1792 - (573 + 1217)]]) then
											v71 = v71 + (2 - 1);
										else
											v71 = v79[1 + 2];
										end
									else
										local v186 = v79[2 - 0];
										v77[v186](v13(v77, v186 + 1, v72));
									end
								elseif (v80 <= (985 - (714 + 225))) then
									if (v80 <= (128 - 84)) then
										if (v80 > (59 - 16)) then
											v77[v79[1 + 1]] = v77[v79[3 - 0]][v79[810 - (118 + 688)]];
										else
											local v189 = v77[v79[52 - (25 + 23)]];
											if not v189 then
												v71 = v71 + 1 + 0;
											else
												local v380 = 1886 - (927 + 959);
												while true do
													if (((0 - 0) - 0) == v380) then
														v77[v79[2 + 0]] = v189;
														v71 = v79[735 - (16 + 716)];
														break;
													end
												end
											end
										end
									elseif ((v80 > (86 - 41)) or (1394 < 133)) then
										local v190 = 97 - (11 + 86);
										local v191;
										while true do
											if (v190 == (0 - 0)) then
												v191 = v79[287 - (175 + 110)];
												v77[v191] = v77[v191](v13(v77, v191 + (1727 - (1165 + 561)), v72));
												break;
											end
										end
									else
										local v192 = 0 + 0;
										local v193;
										while true do
											if (v192 == (0 - 0)) then
												v193 = v79[9 - 7];
												v77[v193](v13(v77, v193 + (480 - (145 + 196 + (1581 - (496 + 947)))), v72));
												break;
											end
										end
									end
								elseif (v80 <= (1844 - (503 + (2651 - (1233 + 125))))) then
									if (v80 > (131 - 84)) then
										v77[v79[2]] = v77[v79[3 + 0]] + v77[v79[1065 - (810 + 251)]];
									else
										v77[v79[2 + 0]] = v77[v79[1 + 2]] % v79[885 - (581 + 300)];
									end
								elseif ((v80 <= (45 + 4)) or (432 == 495)) then
									v77[v79[4 - 2]] = v62[v79[3]];
								elseif (v80 == (583 - (43 + 490))) then
									v77[v79[735 - (711 + 22)]] = v77[v79[3 + 0]][v77[v79[15 - (5 + 6)]]];
								else
									v77[v79[288 - (156 + 130)]] = v77[v79[862 - (240 + 619)]] + v79[1 + 3];
								end
							elseif (v80 <= (95 - 35)) then
								if (v80 <= (4 + 51)) then
									if (v80 <= (1797 - (1344 + 400))) then
										if (v80 > (457 - (255 + 135 + 15))) then
											local v198 = v79[2 + 0];
											local v199 = v79[3 + 1];
											local v200 = v198 + (1165 - (671 + 492));
											local v201 = {v77[v198](v77[v198 + (3 - 2)], v77[v200])};
											for v332 = 1740 - (404 + 1335), v199 do
												v77[v200 + v332] = v201[v332];
											end
											local v202 = v201[407 - (183 + 223)];
											if ((66 < 1456) and v202) then
												v77[v200] = v202;
												v71 = v79[(1648 - (963 + 682)) - 0];
											else
												v71 = v71 + 1 + 0;
											end
										else
											do
												return;
											end
										end
									elseif ((v80 == (20 + 34)) or (878 >= 3222)) then
										local v203 = v79[339 - (10 + 327)];
										local v204, v205 = v70(v77[v203]());
										v72 = (v205 + v203) - (1 + 0);
										local v206 = 0;
										for v335 = v203, v72 do
											local v336 = 338 - (118 + 220);
											while true do
												if ((v336 == (0 + 0)) or (254 >= 3289)) then
													v206 = v206 + (450 - (108 + 285 + 56));
													v77[v335] = v204[v206];
													break;
												end
											end
										end
									else
										v77[v79[4 - 2]] = {};
									end
								elseif (v80 <= (26 + 31)) then
									if (v80 > (236 - 180)) then
										local v208 = v79[1495 - (711 + 782)];
										local v209, v210 = v70(v77[v208](v13(v77, v208 + (1 - 0), v72)));
										v72 = (v210 + v208) - (470 - (270 + 199));
										local v211 = 0 + 0;
										for v337 = v208, v72 do
											v211 = v211 + (1 - 0);
											v77[v337] = v209[v211];
										end
									else
										v77[v79[1821 - (580 + 1239)]] = v79[3] ~= (0 - 0);
										v71 = v71 + 1 + 0;
									end
								elseif (v80 <= ((1507 - (504 + 1000)) + 55)) then
									v77[v79[1 + 1]] = #v77[v79[972 - (522 + 447)]];
								elseif (v80 == (153 - 94)) then
									v62[v79[2 + 1]] = v77[v79[5 - 3]];
								else
									v77[v79[1 + 1]] = #v77[v79[2 + 1]];
								end
							elseif ((v80 <= (253 - 189)) or (2711 <= 705)) then
								if (v80 <= (1972 - (716 + 1194))) then
									if (v80 == (1228 - (435 + 210 + 522))) then
										local v214 = v79[1792 - (1010 + 780)];
										v77[v214](v77[v214 + 1 + 0]);
									else
										v77[v79[2]] = v29(v68[v79[14 - 11]], nil, v63);
									end
								elseif (v80 == (184 - 121)) then
									local v216 = (1672 + 164) - (1045 + 791);
									local v217;
									while true do
										if (v216 == (0 - 0)) then
											v217 = v79[2 - 0];
											v77[v217] = v77[v217](v13(v77, v217 + (506 - (351 + 154)), v72));
											break;
										end
									end
								else
									v77[v79[2]] = v77[v79[(149 + 1428) - (1281 + 293)]] * v77[v79[270 - (28 + 238)]];
								end
							elseif (v80 <= (146 - 80)) then
								if (v80 > (1624 - (1381 + (262 - 84)))) then
									local v219 = v79[2 + 0];
									local v220, v221 = v70(v77[v219](v77[v219 + 1]));
									v72 = (v221 + v219) - (1 + 0);
									local v222 = 0 + 0;
									for v340 = v219, v72 do
										v222 = v222 + (3 - 2);
										v77[v340] = v220[v222];
									end
								else
									v77[v79[2 + 0]] = v62[v79[2 + 1]];
								end
							elseif (v80 <= (537 - (326 + 55 + 52 + 37))) then
								v77[v79[2 + 0]] = v77[v79[3 + 0]][v79[6 - 2]];
							elseif (v80 > ((1225 - (156 + 26)) - (815 + 160))) then
								v77[v79[1158 - (1074 + 48 + 34)]] = v79[6 - 3] ~= (1784 - (214 + 1570));
							else
								v77[v79[1 + 1]] = v79[(12 - 4) - 5];
							end
						elseif ((v80 <= (1559 - (990 + (629 - (149 + 15))))) or (2506 >= 3366)) then
							if (v80 <= (36 + 50)) then
								if ((v80 <= (34 + (1003 - (890 + 70)))) or (123 > 746)) then
									if (v80 <= (71 + 2)) then
										if (v80 <= (279 - 208)) then
											if (v80 == (1796 - (1668 + 58))) then
												v77[v79[628 - (512 + (231 - (39 + 78)))]] = v77[v79[7 - 4]] * v79[8 - 4];
											else
												v77[v79[1 + 1]][v79[10 - 7]] = v77[v79[2 + 2]];
											end
										elseif (v80 > ((496 - (14 + 468)) + 58)) then
											v71 = v79[3 + 0];
										else
											v77[v79[6 - 4]] = v79[1997 - (109 + 1885)] ~= (1469 - (1269 + (439 - 239)));
											v71 = v71 + (1 - 0);
										end
									elseif ((v80 <= (529 - (233 + 221))) or (4444 <= 894)) then
										if (v80 == (889 - (98 + 717))) then
											if (v77[v79[(2314 - 1486) - (802 + 24)]] ~= v77[v79[6 - 2]]) then
												v71 = v71 + (1 - 0);
											else
												v71 = v79[1 + 2];
											end
										else
											v77[v79[2 + 0]][v77[v79[808 - (266 + 539)]]] = v77[v79[1 + 2 + 1]];
										end
									elseif (v80 > ((782 + 519) - (636 + 126 + 463))) then
										v77[v79[1 + 1]] = v79[8 - 5] + v77[v79[4 + 0]];
									else
										local v235 = v79[(3 + 3) - 4];
										v77[v235] = v77[v235](v77[v235 + 1 + 0 + 0]);
									end
								elseif (v80 <= 81) then
									if ((1376 > 583) and (v80 <= ((62 - 29) + 46))) then
										if (v80 > (65 + 0 + (45 - 32))) then
											local v237 = 0 + 0;
											local v238;
											while true do
												if ((0 - 0) == v237) then
													v238 = v79[1 + 0 + (52 - (12 + 39))];
													do
														return v77[v238](v13(v77, v238 + (1434 - (797 + 636)), v79[14 - 11]));
													end
													break;
												end
											end
										else
											local v239 = v79[5 - 3];
											v77[v239] = v77[v239]();
										end
									elseif (v80 == ((1779 + 133) - (1552 + 280))) then
										local v241 = 1619 - (1427 + 192);
										local v242;
										while true do
											if ((v241 == (0 + 0)) or (2427 == 2455)) then
												v242 = v79[4 - (5 - 3)];
												do
													return v77[v242](v13(v77, v242 + 1 + (0 - 0), v79[1 + 1 + 1 + 0]));
												end
												break;
											end
										end
									else
										for v343 = v79[3 - 1], v79[329 - ((486 - 294) + 134)] do
											v77[v343] = nil;
										end
									end
								elseif (v80 <= (1359 - (316 + 960))) then
									if ((3393 >= 2729) and (v80 == (111 - 29))) then
										local v243 = 0 + 0;
										local v244;
										local v245;
										local v246;
										local v247;
										while true do
											if ((4175 == 4175) and (v243 == (0 - 0))) then
												v244 = v79[2 + 0];
												v245, v246 = v70(v77[v244]());
												v243 = 1 + 0 + 0;
											end
											if (v243 == ((5886 - 4668) - (841 + (2086 - (1596 + 114))))) then
												v72 = (v246 + v244) - 1;
												v247 = 0 - 0;
												v243 = 7 - 5;
											end
											if (v243 == (5 - 3)) then
												for v514 = v244, v72 do
													local v515 = 859 - (464 + 395);
													while true do
														if ((4584 > 1886) and (v515 == (551 - (83 + 468)))) then
															v247 = v247 + 1 + 0;
															v77[v514] = v245[v247];
															break;
														end
													end
												end
												break;
											end
										end
									elseif v77[v79[1808 - (1202 + (1576 - 972))]] then
										v71 = v71 + (838 - (467 + (1083 - (164 + 549))));
									else
										v71 = v79[13 - 10];
									end
								elseif (v80 <= (139 - (1493 - (1059 + 379)))) then
									do
										return v77[v79[5 - 3]]();
									end
								elseif (v80 == (14 + 71)) then
									local v394 = 325 - (45 + 280);
									local v395;
									local v396;
									local v397;
									while true do
										if ((v394 == (0 + 0)) or (1043 >= 2280)) then
											v395 = v79[2];
											v396 = v77[v395];
											v394 = 1 + 0;
										end
										if ((v394 == ((1 - 0) + 0)) or (667 < 71)) then
											v397 = v77[v395 + 2 + 0];
											if (v397 > (0 + 0)) then
												if (v396 > v77[v395 + ((1 + 0) - 0)]) then
													v71 = v79[3];
												else
													v77[v395 + (1914 - (58 + 282 + 1571))] = v396;
												end
											elseif (v396 < v77[v395 + (393 - (145 + 247)) + 0]) then
												v71 = v79[1775 - (1733 + 33 + 6)];
											else
												v77[v395 + (8 - 5)] = v396;
											end
											break;
										end
									end
								elseif ((v77[v79[1036 - (125 + 909)]] < v77[v79[1952 - (1096 + 852)]]) or (4482 < 2793)) then
									v71 = v79[2 + 1];
								else
									v71 = v71 + (1 - 0);
								end
							elseif (v80 <= (91 + 4)) then
								if (v80 <= (88 + 2)) then
									if (v80 <= (600 - (409 + 48 + 55))) then
										if (v80 == (323 - (46 + 190))) then
											local v248 = 95 - (51 + 44);
											local v249;
											local v250;
											local v251;
											while true do
												if ((561 < 4519) and (v248 == (1 + 0))) then
													v251 = 1317 - (1114 + 203);
													for v517 = v249, v79[730 - (228 + 498)] do
														local v518 = 0 + 0;
														while true do
															if ((v518 == ((0 - 0) + 0)) or (677 == 1434)) then
																v251 = v251 + (664 - (174 + 489));
																v77[v517] = v250[v251];
																break;
															end
														end
													end
													break;
												end
												if ((2827 == 2827) and (v248 == (0 - 0))) then
													v249 = v79[2];
													v250 = {v77[v249](v77[v249 + (525 - (303 + 221))])};
													v248 = 2 - (1 + 0);
												end
											end
										else
											v77[v79[1271 - (231 + 1038)]][v77[v79[3]]] = v79[4 + 0];
										end
									elseif (v80 > (75 + 14)) then
										if (v77[v79[1164 - (171 + 991)]] ~= v79[31 - (10 + 17)]) then
											v71 = v71 + (4 - (4 - 1));
										else
											v71 = v79[1735 - ((2120 - (254 + 466)) + 332)];
										end
									elseif ((2556 == 2556) and not v77[v79[3 - 1]]) then
										v71 = v71 + (2 - 1);
									else
										v71 = v79[2 + 1];
									end
								elseif (v80 <= (229 - 137)) then
									if ((v80 > 91) or (3106 >= 4932)) then
										local v254 = v79[2 + 0];
										do
											return v13(v77, v254, v254 + v79[3 + 0]);
										end
									else
										do
											return v77[v79[6 - 4]];
										end
									end
								elseif (v80 <= (268 - 175)) then
									local v255 = v79[2 - 0];
									local v256 = {v77[v255](v13(v77, v255 + (1249 - (111 + 1137)), v79[161 - (91 + 67)]))};
									local v257 = (628 - (294 + 334)) - 0;
									for v345 = v255, v79[1 + 3] do
										local v346 = 523 - (423 + 100);
										while true do
											if (v346 == (0 + 0)) then
												v257 = v257 + (1224 - (109 + 1114));
												v77[v345] = v256[v257];
												break;
											end
										end
									end
								elseif (v80 > (260 - 166)) then
									local v400 = 0 + 0;
									local v401;
									while true do
										if ((v400 == (771 - (326 + 445))) or (1217 <= 503)) then
											v401 = v79[8 - 6];
											do
												return v13(v77, v401, v72);
											end
											break;
										end
									end
								else
									local v402 = v79[4 - 2];
									local v403 = v77[v402 + (4 - 2)];
									local v404 = v77[v402] + v403;
									v77[v402] = v404;
									if ((v403 > (711 - (530 + 181))) or (441 >= 4871)) then
										if (v404 <= v77[v402 + (882 - (614 + 267))]) then
											local v550 = 32 - ((272 - (236 + 17)) + 13);
											while true do
												if ((3751 > 731) and (v550 == (0 - 0))) then
													v71 = v79[(3 + 3) - 3];
													v77[v402 + (8 - 5)] = v404;
													break;
												end
											end
										end
									elseif (v404 >= v77[v402 + 1 + 0]) then
										local v551 = 0 + 0;
										while true do
											if ((v551 == (0 + 0)) or (2515 < 1804)) then
												v71 = v79[(320 + 90) - (174 + 233)];
												v77[v402 + (4 - 1)] = v404;
												break;
											end
										end
									end
								end
							elseif ((3008 > 1924) and (v80 <= (173 - 74))) then
								if ((295 == 295) and (v80 <= (44 + (199 - 146)))) then
									if (v80 > 96) then
										if (v77[v79[1176 - (663 + 511)]] < v77[v79[4 + 0]]) then
											v71 = v71 + (1 - 0);
										else
											v71 = v79[3];
										end
									elseif ((4828 >= 1725) and (v77[v79[1814 - (1293 + 519)]] == v77[v79[7 - 3]])) then
										v71 = v71 + (2 - (4 - 3));
									else
										v71 = v79[5 - 2];
									end
								elseif ((v80 == (237 - 139)) or (4201 < 2150)) then
									local v258 = v79[1 + 0 + 1];
									local v259 = {};
									for v347 = 4 - (3 + 0), #v76 do
										local v348 = v76[v347];
										for v408 = 0 - 0, #v348 do
											local v409 = v348[v408];
											local v410 = v409[1 + 0];
											local v411 = v409[1 + 1];
											if ((v410 == v77) and (v411 >= v258)) then
												v259[v411] = v410[v411];
												v409[2 - 1] = v259;
											end
										end
									end
								else
									v77[v79[1 + 1]] = v29(v68[v79[1 + 2]], nil, v63);
								end
							elseif ((v80 <= (64 + 37)) or (3076 >= 4666)) then
								if (v80 > (1196 - (709 + 387))) then
									local v261 = v79[(2352 - (413 + 381)) - (655 + 901)];
									local v262 = {v77[v261](v13(v77, v261 + (2 - 1), v72))};
									local v263 = 0 - 0;
									for v349 = v261, v79[6 - 2] do
										v263 = v263 + 1 + 0;
										v77[v349] = v262[v263];
									end
								elseif (v77[v79[2 + 0]] < v77[v79[5 - 1]]) then
									v71 = v79[1 + 2];
								else
									v71 = v71 + (1 - 0);
								end
							elseif (v80 <= (199 - 97)) then
								local v264 = v79[1882 - (446 + 1434)];
								do
									return v13(v77, v264, v72);
								end
							elseif (v80 > (1386 - (1040 + 243))) then
								local v413 = v68[v79[8 - 5]];
								local v414;
								local v415 = {};
								v414 = v10({}, {__index=function(v467, v468)
									local v469 = v415[v468];
									return v469[1311 - (682 + 628)][v469[1849 - (559 + 1288)]];
								end,__newindex=function(v470, v471, v472)
									local v473 = 1931 - (609 + 1322);
									local v474;
									while true do
										if (v473 == (0 + 0)) then
											v474 = v415[v471];
											v474[455 - (13 + 441)][v474[7 - 5]] = v472;
											break;
										end
									end
								end});
								for v475 = 2 - (1971 - (582 + 1388)), v79[3 + 1] do
									local v476 = 0 - 0;
									local v477;
									while true do
										if (v476 == (1 + 0)) then
											if (v477[3 - 2] == (45 + 80)) then
												v415[v475 - (1 + 0)] = {v77,v477[4 - 1]};
											else
												v415[v475 - (1 - 0)] = {v62,v477[3 + 0]};
											end
											v76[#v76 + 1 + 0] = v415;
											break;
										end
										if (v476 == (0 + 0)) then
											v71 = v71 + (434 - (153 + 280));
											v477 = v67[v71];
											v476 = 2 - (1 - 0);
										end
									end
								end
								v77[v79[5 - 3]] = v29(v413, v414, v63);
							else
								v77[v79[2 + 0]] = v79[3 + 0] ~= (0 + 0);
							end
						elseif (v80 <= 121) then
							if ((v80 <= (59 + 53)) or (2027 >= 3030)) then
								if ((3245 <= 3566) and (v80 <= (99 + 9))) then
									if (v80 <= (77 + 29)) then
										if (v80 > ((114 + 45) - 54)) then
											local v265 = v79[2 + 0];
											local v266 = v77[v265];
											for v352 = v265 + (668 - (89 + 578)), v79[3 + 0] do
												v7(v266, v77[v352]);
											end
										elseif (v77[v79[3 - 1]] <= v77[v79[1053 - (572 + 477)]]) then
											v71 = v71 + (690 - (586 + 103));
										else
											v71 = v79[(365 - (326 + 38)) + 2];
										end
									elseif (v80 == (65 + 42)) then
										local v267 = 0 + 0;
										local v268;
										while true do
											if (v267 == (86 - (84 + 2))) then
												v268 = v79[2 - 0];
												v77[v268](v77[v268 + 1 + 0]);
												break;
											end
										end
									else
										v77[v79[5 - 3]] = v77[v79[3 + (0 - 0)]] % v77[v79[7 - 3]];
									end
								elseif ((v80 <= 110) or (2627 <= 381)) then
									if (v80 == (951 - (497 + (492 - 147)))) then
										v62[v79[1 + 2]] = v77[v79[1 + 1]];
									else
										v77[v79[1335 - (605 + 728)]] = v77[v79[3 + 0]] * v79[1966 - (1300 + 662)];
									end
								elseif (v80 == ((866 - (47 + 573)) - 135)) then
									local v273 = v79[2];
									v77[v273](v13(v77, v273 + (3 - 2), v79[1 + 2]));
								else
									v77[v79[2 + 0]][v77[v79[8 - 5]]] = v79[14 - 10];
								end
							elseif (v80 <= (105 + 11)) then
								if (v80 <= (315 - 201)) then
									if (v80 == (313 - 200)) then
										if (v77[v79[2]] == v79[4]) then
											v71 = v71 + 1;
										else
											v71 = v79[3 + 0];
										end
									else
										v77[v79[3 - 1]][v77[v79[492 - (457 + 32)]]] = v77[v79[2 + 2]];
									end
								elseif ((283 < 4544) and (v80 > (39 + 70 + 6))) then
									v77[v79[7 - 5]] = v63[v79[1164 - (160 + 1001)]];
								else
									local v280 = 1402 - (832 + 570);
									local v281;
									local v282;
									while true do
										if (v280 == (0 + 0)) then
											v281 = v79[1 + 1];
											v282 = v77[v79[10 - 7]];
											v280 = 1 + 0;
										end
										if (v280 == (797 - (588 + 208))) then
											v77[v281 + (898 - (525 + 372))] = v282;
											v77[v281] = v282[v79[7 - 3]];
											break;
										end
									end
								end
							elseif (v80 <= (387 - (1142 - 873))) then
								if ((618 < 3820) and (v80 == (315 - 198))) then
									if ((4287 >= 124) and (v79[(1263 - 484) - (643 + 134)] <= v77[v79[1804 - (884 + 916)]])) then
										v71 = v71 + ((1665 - (1269 + 395)) - 0);
									else
										v71 = v79[2 + 1];
									end
								else
									local v283 = 492 - (76 + 416);
									local v284;
									local v285;
									while true do
										if ((2569 <= 3918) and ((653 - ((675 - (319 + 124)) + 421)) == v283)) then
											v284 = v79[1891 - ((3586 - 2017) + 320)];
											v285 = v77[v79[(1008 - (564 + 443)) + 2]];
											v283 = (2 - 1) + 0;
										end
										if ((3 - 2) == v283) then
											v77[v284 + (606 - (316 + 289))] = v285;
											v77[v284] = v285[v77[v79[10 - (464 - (337 + 121))]]];
											break;
										end
									end
								end
							elseif ((v80 <= (44 + 75)) or (3154 <= 2030)) then
								local v286 = v79[5 - 3];
								v77[v286] = v77[v286](v13(v77, v286 + 1 + 0, v79[1456 - (666 + 787)]));
							elseif (v80 > (545 - (360 + 65))) then
								local v421 = v79[2 + (0 - 0)];
								local v422 = v77[v79[10 - (23 - 16)]];
								v77[v421 + (4 - 3)] = v422;
								v77[v421] = v422[v79[258 - (79 + 175)]];
							else
								local v426 = v79[2 - 0];
								local v427 = v77[v79[3 + 0]];
								v77[v426 + (2 - 1)] = v427;
								v77[v426] = v427[v77[v79[7 - 3]]];
							end
						elseif (v80 <= (1029 - (503 + 396))) then
							if ((v80 <= (306 - (92 + 89))) or (3761 <= 682)) then
								if ((2128 > 836) and (v80 <= (237 - 114))) then
									if (v80 > (63 + 59)) then
										if (not v77[v79[2 + 0]] or (2361 <= 1063)) then
											v71 = v71 + (3 - 2);
										else
											v71 = v79[1 + 2];
										end
									else
										local v288 = v79[4 - 2];
										local v289 = v77[v288 + (4 - 2)];
										local v290 = v77[v288] + v289;
										v77[v288] = v290;
										if ((v289 > (0 + 0)) or (1790 >= 3221)) then
											if (v290 <= v77[v288 + 1 + 0]) then
												local v524 = 0 - 0;
												while true do
													if (v524 == ((1911 - (1261 + 650)) + 0)) then
														v71 = v79[3 + 0 + 0];
														v77[v288 + (4 - 1)] = v290;
														break;
													end
												end
											end
										elseif (v290 >= v77[v288 + (1245 - (485 + 759))]) then
											v71 = v79[(8 - 2) - 3];
											v77[v288 + (7 - 4)] = v290;
										end
									end
								elseif ((4459 >= 3851) and (v80 > (1313 - ((2259 - (772 + 1045)) + 747)))) then
									v77[v79[1137 - (832 + 303)]] = v77[v79[357 - (5 + 349)]];
								else
									local v294 = v79[948 - (88 + 122 + 736)];
									local v295, v296 = v70(v77[v294](v13(v77, v294 + ((1416 - (102 + 42)) - (266 + 1005)), v79[1 + 2])));
									v72 = (v296 + v294) - ((1845 - (1524 + 320)) + 0);
									local v297 = 0 + 0;
									for v353 = v294, v72 do
										v297 = v297 + (790 - (766 + 23));
										v77[v353] = v295[v297];
									end
								end
							elseif (v80 <= (626 - 499)) then
								if (v80 == (171 - 45)) then
									v77[v79[4 - 2]] = v77[v79[10 - 7]];
								else
									v77[v79[(2338 - (1049 + 221)) - (507 + 559)]] = v79[1076 - (1036 + 37)] + v77[v79[(159 - (18 + 138)) + 1]];
								end
							elseif (v80 <= (516 - (212 + 176))) then
								v77[v79[3 - 1]] = v79[8 - (12 - 7)];
							elseif (v80 > ((1326 - (67 + 1035)) - 95)) then
								v77[v79[2 - 0]]();
							else
								local v432 = 0 + 0;
								local v433;
								while true do
									if ((1480 - ((989 - (136 + 212)) + 839)) == v432) then
										v433 = v79[915 - (910 + 3)];
										v77[v433] = v77[v433]();
										break;
									end
								end
							end
						elseif (v80 <= (341 - 207)) then
							if (v80 <= (1816 - (1466 + 218))) then
								if ((v80 == (61 + 70)) or (2969 <= 1860)) then
									if (v79[1150 - (556 + (2515 - 1923))] == v77[v79[2 + 2]]) then
										v71 = v71 + 1;
									else
										v71 = v79[811 - (329 + 479)];
									end
								else
									local v303 = v79[856 - (174 + 545 + 135)];
									local v304 = v79[13 - (9 + 0)];
									local v305 = v303 + (3 - 1);
									local v306 = {v77[v303](v77[v303 + 1 + 0], v77[v305])};
									for v356 = 1 + 0, v304 do
										v77[v305 + v356] = v306[v356];
									end
									local v307 = v306[740 - (396 + 343)];
									if v307 then
										v77[v305] = v307;
										v71 = v79[1 + 2];
									else
										v71 = v71 + (1478 - (29 + 1448));
									end
								end
							elseif ((v80 > (1522 - ((1739 - (240 + 1364)) + (2336 - (1050 + 32))))) or (2123 == 39)) then
								v77[v79[897 - (557 + 338)]] = v77[v79[11 - 8]] + v79[18 - 14];
							else
								do
									return;
								end
							end
						elseif ((v80 <= (91 + 45)) or (2132 <= 201)) then
							if (v80 > (1662 - (389 + 1138))) then
								if (v77[v79[4 - 2]] <= v77[v79[578 - (102 + 472)]]) then
									v71 = v71 + 1 + 0;
								else
									v71 = v79[2 + 1];
								end
							else
								local v309 = v79[2 + 0];
								local v310 = {};
								for v359 = 1546 - (320 + 1225), #v76 do
									local v360 = 0 - 0;
									local v361;
									while true do
										if ((v360 == (0 - 0)) or (4338 >= 4477)) then
											v361 = v76[v359];
											for v539 = 0 + (0 - 0), #v361 do
												local v540 = 1464 - (157 + 1307);
												local v541;
												local v542;
												local v543;
												while true do
													if ((1859 - (486 + 335 + 1038)) == v540) then
														v541 = v361[v539];
														v542 = v541[2 - 1];
														v540 = 1 + 0;
													end
													if ((v540 == (1 - 0)) or (1732 >= 3545)) then
														v543 = v541[(1056 - (331 + 724)) + 1];
														if ((1125 >= 64) and (v542 == v77) and (v543 >= v309)) then
															v310[v543] = v542[v543];
															v541[2 - 1] = v310;
														end
														break;
													end
												end
											end
											break;
										end
									end
								end
							end
						elseif (v80 <= ((94 + 1069) - (834 + 192))) then
							local v311 = v79[(645 - (269 + 375)) + 2];
							local v312 = v77[v311];
							for v362 = v311 + 1 + 0, v79[(726 - (267 + 458)) + 3] do
								v312 = v312 .. v77[v362];
							end
							v77[v79[2 - 0]] = v312;
						elseif (v80 > (442 - (300 + 4))) then
							v77[v79[1 + 0 + 1]][v79[7 - 4]] = v77[v79[4]];
						else
							v77[v79[2]][v79[365 - (112 + 250)]] = v79[2 + 2];
						end
						v71 = v71 + (2 - 1);
						break;
					end
				end
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
