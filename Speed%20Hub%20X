--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v89 = v2(v0(v30, 16));
			if v19 then
				local v110 = 0;
				local v111;
				while true do
					if (v110 == 1) then
						return v111;
					end
					if (v110 == 0) then
						v111 = v5(v89, v19);
						v19 = nil;
						v110 = 1;
					end
				end
			else
				return v89;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v90 = (v31 / ((5 - 3) ^ (v32 - (1 + (0 - 0))))) % ((5 - 3) ^ (((v33 - ((118 - (32 + 85)) - 0)) - (v32 - (2 - 1))) + 1));
			return v90 - (v90 % (1 + 0));
		else
			local v91 = (2 - 0) ^ (v32 - (620 - (544 + 11 + 15 + 49)));
			return (((v31 % (v91 + v91)) >= v91) and (932 - (857 + 74))) or (568 - (367 + 201));
		end
	end
	local function v21()
		local v34 = v1(v16, v18, v18);
		v18 = v18 + 1;
		return v34;
	end
	local function v22()
		local v35 = 0 - 0;
		local v36;
		local v37;
		while true do
			if (v35 == (958 - (892 + 65))) then
				return (v37 * 256) + v36;
			end
			if (v35 == (0 - 0)) then
				v36, v37 = v1(v16, v18, v18 + (4 - 2));
				v18 = v18 + (3 - 1);
				v35 = 1 + 0;
			end
		end
	end
	local function v23()
		local v38, v39, v40, v41 = v1(v16, v18, v18 + 3 + 0);
		v18 = v18 + ((27 - 12) - 11);
		return (v41 * 16777216) + (v40 * (66488 - (802 + 150))) + (v39 * ((502 + 187) - 433)) + v38;
	end
	local function v24()
		local v42 = v23();
		local v43 = v23();
		local v44 = 998 - (915 + 82);
		local v45 = (v20(v43, 2 - 1, 12 + 8) * (((1488 - (998 + 488)) - 0) ^ (1219 - (1069 + 118)))) + v42;
		local v46 = v20(v43, 21, 31);
		local v47 = ((v20(v43, 72 - 40) == (1 - 0)) and -(1 + 0)) or (1 - 0);
		if (v46 == (0 + 0)) then
			if (v45 == ((252 + 539) - (368 + 423))) then
				return v47 * (0 - 0);
			else
				local v112 = (15 + 3) - (10 + 8);
				while true do
					if ((0 - 0) == v112) then
						v46 = (1215 - (201 + 571)) - (416 + 26);
						v44 = 0 - 0;
						break;
					end
				end
			end
		elseif (v46 == 2047) then
			return ((v45 == (0 + 0)) and (v47 * (1 / (0 - 0)))) or (v47 * NaN);
		end
		return v8(v47, v46 - (1461 - (145 + 293))) * (v44 + (v45 / ((432 - (44 + 386)) ^ (1190 - (116 + 1022)))));
	end
	local function v25(v48)
		local v49;
		if not v48 then
			v48 = v23();
			if (v48 == (0 - 0)) then
				return "";
			end
		end
		v49 = v3(v16, v18, (v18 + v48) - (1 + 0));
		v18 = v18 + v48;
		local v50 = {};
		for v66 = 3 - 2, #v49 do
			v50[v66] = v2(v1(v3(v49, v66, v66)));
		end
		return v6(v50);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v51 = (function()
			return function(v92, v93, v94, v95, v96, v97, v98, v99, v100)
				local v101 = (function()
					return 0;
				end)();
				local v92 = (function()
					return;
				end)();
				local v93 = (function()
					return;
				end)();
				while true do
					if (v101 ~= (1749 - (1013 + 736))) then
					else
						local v117 = (function()
							return 0 + 0;
						end)();
						while true do
							if (v117 == (0 - 0)) then
								v92 = (function()
									return 0 - 0;
								end)();
								v93 = (function()
									return nil;
								end)();
								v117 = (function()
									return 868 - (550 + 317);
								end)();
							end
							if (v117 ~= (1 - 0)) then
							else
								v101 = (function()
									return 812 - (569 + 242);
								end)();
								break;
							end
						end
					end
					if (v101 ~= (2 - 1)) then
					else
						local v118 = (function()
							return 0 - 0;
						end)();
						while true do
							if (0 == v118) then
								while true do
									if (v92 ~= 0) then
									else
										v93 = (function()
											return v94();
										end)();
										if (v95(v93, #"{", #"\\") ~= 0) then
										else
											local v123 = (function()
												return 0 - 0;
											end)();
											local v124 = (function()
												return;
											end)();
											local v125 = (function()
												return;
											end)();
											local v126 = (function()
												return;
											end)();
											local v127 = (function()
												return;
											end)();
											while true do
												if (1 ~= v123) then
												else
													local v129 = (function()
														return 285 - (134 + 151);
													end)();
													while true do
														if (v129 ~= (1665 - (970 + 695))) then
														else
															v126 = (function()
																return nil;
															end)();
															v127 = (function()
																return nil;
															end)();
															v129 = (function()
																return 1;
															end)();
														end
														if (v129 == (1 - 0)) then
															v123 = (function()
																return 2;
															end)();
															break;
														end
													end
												end
												if (v123 ~= (1990 - (582 + 1408))) then
												else
													local v130 = (function()
														return 0;
													end)();
													local v131 = (function()
														return;
													end)();
													while true do
														if (v130 ~= 0) then
														else
															v131 = (function()
																return 0 - 0;
															end)();
															while true do
																if (v131 == (0 + 0)) then
																	v124 = (function()
																		return 700 - (271 + 429);
																	end)();
																	v125 = (function()
																		return nil;
																	end)();
																	v131 = (function()
																		return 1 + 0;
																	end)();
																end
																if (v131 ~= (1 - 0)) then
																else
																	v123 = (function()
																		return 3 - 2;
																	end)();
																	break;
																end
															end
															break;
														end
													end
												end
												if (v123 == (1290 - (993 + 295))) then
													while true do
														if (v124 == #"~") then
															local v463 = (function()
																return 0 + 0;
															end)();
															local v464 = (function()
																return;
															end)();
															while true do
																if (v463 ~= (1824 - (1195 + 629))) then
																else
																	v464 = (function()
																		return 0;
																	end)();
																	while true do
																		if (v464 ~= (0 + 0)) then
																		else
																			v127 = (function()
																				return {v96(),v96(),nil,nil};
																			end)();
																			if (v125 == 0) then
																				local v582 = (function()
																					return 0 + 0;
																				end)();
																				local v583 = (function()
																					return;
																				end)();
																				while true do
																					if (v582 ~= (0 - 0)) then
																					else
																						v583 = (function()
																							return 241 - (187 + 54);
																						end)();
																						while true do
																							if (v583 ~= 0) then
																							else
																								v127[#"-19"] = (function()
																									return v96();
																								end)();
																								v127[#"asd1"] = (function()
																									return v96();
																								end)();
																								break;
																							end
																						end
																						break;
																					end
																				end
																			elseif (v125 == #"!") then
																				v127[#"91("] = (function()
																					return v97();
																				end)();
																			elseif (v125 == (531 - (406 + 123))) then
																				v127[#"91("] = (function()
																					return v97() - ((1771 - (1749 + 20)) ^ (796 - (162 + 618)));
																				end)();
																			elseif (v125 == #"xxx") then
																				local v590 = (function()
																					return 0 + 0;
																				end)();
																				local v591 = (function()
																					return;
																				end)();
																				while true do
																					if (v590 == 0) then
																						v591 = (function()
																							return 0;
																						end)();
																						while true do
																							if (v591 ~= (1322 - (1249 + 73))) then
																							else
																								v127[#"-19"] = (function()
																									return v97() - ((1 + 1) ^ (12 + 4));
																								end)();
																								v127[#"xnxx"] = (function()
																									return v96();
																								end)();
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			v464 = (function()
																				return 1 + 0;
																			end)();
																		end
																		if ((1 - 0) == v464) then
																			v124 = (function()
																				return 5 - 3;
																			end)();
																			break;
																		end
																	end
																	break;
																end
															end
														end
														if (v124 ~= 2) then
														else
															local v465 = (function()
																return 0 - 0;
															end)();
															local v466 = (function()
																return;
															end)();
															while true do
																if (0 ~= v465) then
																else
																	v466 = (function()
																		return 0;
																	end)();
																	while true do
																		if ((0 + 0) == v466) then
																			if (v95(v126, #"\\", #"!") == #",") then
																				v127[1 + 1] = (function()
																					return v98[v127[1 + 1]];
																				end)();
																			end
																			if (v95(v126, 1638 - (1373 + 263), 2) == #"~") then
																				v127[#"-19"] = (function()
																					return v98[v127[#"asd"]];
																				end)();
																			end
																			v466 = (function()
																				return 2 - 1;
																			end)();
																		end
																		if ((1001 - (451 + 549)) ~= v466) then
																		else
																			v124 = (function()
																				return #"gha";
																			end)();
																			break;
																		end
																	end
																	break;
																end
															end
														end
														if (0 ~= v124) then
														else
															local v467 = (function()
																return 584 - (57 + 527);
															end)();
															local v468 = (function()
																return;
															end)();
															while true do
																if (v467 == (0 + 0)) then
																	v468 = (function()
																		return 0 - 0;
																	end)();
																	while true do
																		if (v468 ~= (1 - 0)) then
																		else
																			v124 = (function()
																				return #">";
																			end)();
																			break;
																		end
																		if (v468 ~= (1384 - (746 + 638))) then
																		else
																			v125 = (function()
																				return v95(v93, 1 + 1, #"asd");
																			end)();
																			v126 = (function()
																				return v95(v93, #".dev", 8 - 2);
																			end)();
																			v468 = (function()
																				return 1;
																			end)();
																		end
																	end
																	break;
																end
															end
														end
														if (v124 == #"-19") then
															if (v95(v126, #"asd", #"91(") == #",") then
																v127[#"asd1"] = (function()
																	return v98[v127[#"0836"]];
																end)();
															end
															v99[v100] = (function()
																return v127;
															end)();
															break;
														end
													end
													break;
												end
											end
										end
										break;
									end
								end
								return v92, v93, v94, v95, v96, v97, v98, v99, v100;
							end
						end
					end
				end
			end;
		end)();
		local v52 = (function()
			return function(v102, v103, v104)
				local v105 = (function()
					return 341 - (218 + 123);
				end)();
				local v106 = (function()
					return;
				end)();
				while true do
					if ((1581 - (1535 + 46)) ~= v105) then
					else
						v106 = (function()
							return 0 + 0;
						end)();
						while true do
							if (v106 ~= (0 + 0)) then
							else
								local v121 = (function()
									return 560 - (306 + 254);
								end)();
								local v122 = (function()
									return;
								end)();
								while true do
									if (v121 ~= (0 - 0)) then
									else
										v122 = (function()
											return 0 + 0;
										end)();
										while true do
											if (v122 == (166 - (122 + 44))) then
												v102[v103 - #"<"] = (function()
													return v104();
												end)();
												return v102, v103, v104;
											end
										end
										break;
									end
								end
							end
						end
						break;
					end
				end
			end;
		end)();
		local v53 = (function()
			return {};
		end)();
		local v54 = (function()
			return {};
		end)();
		local v55 = (function()
			return {};
		end)();
		local v56 = (function()
			return {v53,v54,nil,v55};
		end)();
		local v57 = (function()
			return v23();
		end)();
		local v58 = (function()
			return {};
		end)();
		for v68 = #"{", v57 do
			local v69 = (function()
				return 0 - 0;
			end)();
			local v70 = (function()
				return;
			end)();
			local v71 = (function()
				return;
			end)();
			local v72 = (function()
				return;
			end)();
			while true do
				if (v69 ~= (1467 - (899 + 568))) then
				else
					v70 = (function()
						return 0;
					end)();
					v71 = (function()
						return nil;
					end)();
					v69 = (function()
						return 1 + 0;
					end)();
				end
				if (v69 ~= (1 - 0)) then
				else
					v72 = (function()
						return nil;
					end)();
					while true do
						if (v70 ~= 1) then
						else
							if (v71 == #"}") then
								v72 = (function()
									return v21() ~= 0;
								end)();
							elseif (v71 == (6 - 4)) then
								v72 = (function()
									return v24();
								end)();
							elseif (v71 ~= #"xxx") then
							else
								v72 = (function()
									return v25();
								end)();
							end
							v58[v68] = (function()
								return v72;
							end)();
							break;
						end
						if (v70 == (0 - 0)) then
							local v120 = (function()
								return 0;
							end)();
							while true do
								if (v120 ~= (604 - (268 + 335))) then
								else
									v70 = (function()
										return 1;
									end)();
									break;
								end
								if (v120 == (0 + 0)) then
									v71 = (function()
										return v21();
									end)();
									v72 = (function()
										return nil;
									end)();
									v120 = (function()
										return 291 - (60 + 230);
									end)();
								end
							end
						end
					end
					break;
				end
			end
		end
		v56[#"xnx"] = (function()
			return v21();
		end)();
		for v73 = #"{", v23() do
			FlatIdent_781F8, Descriptor, v21, v20, v22, v23, v58, v53, v73 = (function()
				return v51(FlatIdent_781F8, Descriptor, v21, v20, v22, v23, v58, v53, v73);
			end)();
		end
		for v74 = #"]", v23() do
			v54, v74, v28 = (function()
				return v52(v54, v74, v28);
			end)();
		end
		return v56;
	end
	local function v29(v60, v61, v62)
		local v63 = v60[1 - 0];
		local v64 = v60[2];
		local v65 = v60[68 - (30 + 35)];
		return function(...)
			local v75 = v63;
			local v76 = v64;
			local v77 = v65;
			local v78 = v27;
			local v79 = 1 + 0;
			local v80 = -(1258 - (811 + 232 + 214));
			local v81 = {};
			local v82 = {...};
			local v83 = v12("#", ...) - ((1286 - (1035 + 248)) - 2);
			local v84 = {};
			local v85 = {};
			for v107 = 0, v83 do
				if (v107 >= v77) then
					v81[v107 - v77] = v82[v107 + (1213 - (323 + 889))];
				else
					v85[v107] = v82[v107 + (2 - 1)];
				end
			end
			local v86 = (v83 - v77) + 1;
			local v87;
			local v88;
			while true do
				v87 = v75[v79];
				v88 = v87[581 - (361 + 219)];
				if (v88 <= (388 - (53 + 267))) then
					if ((1930 == 1930) and (v88 <= 33)) then
						if ((3828 == 3828) and (v88 <= (4 + 12))) then
							if (v88 <= (420 - (15 + 398))) then
								if ((554 == 554) and (v88 <= (985 - ((39 - (20 + 1)) + 964)))) then
									if ((v88 <= 1) or (2563 == 172)) then
										if (v88 > (0 - 0)) then
											local v132 = v87[2 + 1];
											local v133 = v85[v132];
											for v329 = v132 + 1 + 0, v87[4] do
												v133 = v133 .. v85[v329];
											end
											v85[v87[852 - (11 + 9 + 830)]] = v133;
										elseif (v87[2] <= v85[v87[4 + 0]]) then
											v79 = v79 + 1;
										else
											v79 = v87[129 - (116 + 10)];
										end
									elseif (v88 == (1 + 1)) then
										if (v87[740 - (542 + 196)] == v85[v87[8 - (323 - (134 + 185))]]) then
											v79 = v79 + 1 + 0;
										else
											v79 = v87[2 + 1];
										end
									else
										v85[v87[(1134 - (549 + 584)) + 1]] = #v85[v87[7 - (689 - (314 + 371))]];
									end
								elseif ((3889 >= 131) and (v88 <= (12 - 7))) then
									if ((v88 > (1555 - (1126 + 425))) or (492 == 4578)) then
										local v136 = v87[(1397 - 990) - (118 + 287)];
										local v137 = {v85[v136](v85[v136 + (1122 - (118 + 1003))])};
										local v138 = 0;
										for v330 = v136, v87[11 - 7] do
											v138 = v138 + (378 - (142 + 235));
											v85[v330] = v137[v138];
										end
									else
										v85[v87[9 - 7]] = v85[v87[1 + 2]] + v87[981 - (553 + 424)];
									end
								elseif ((v88 > (10 - 4)) or (906 <= 876)) then
									local v140 = v76[v87[3]];
									local v141;
									local v142 = {};
									v141 = v10({}, {__index=function(v333, v334)
										local v335 = 0 + 0;
										local v336;
										while true do
											if ((v335 == (0 + 0)) or (4112 < 1816)) then
												v336 = v142[v334];
												return v336[1 + 0][v336[1 + 1]];
											end
										end
									end,__newindex=function(v337, v338, v339)
										local v340 = v142[v338];
										v340[1][v340[2 + 0]] = v339;
									end});
									for v342 = 2 - 1, v87[11 - 7] do
										local v343 = 0 - 0;
										local v344;
										while true do
											if ((4525 >= 1223) and (2456 < 4176) and (v343 == (1 + 0))) then
												if ((v344[(3 + 1) - 3] == 75) or (1150 == 3452)) then
													v142[v342 - 1] = {v85,v344[1175 - (786 + 386)]};
												else
													v142[v342 - (1 + 0)] = {v61,v344[3 + 0]};
												end
												v84[#v84 + 1 + (1379 - (1055 + 324))] = v142;
												break;
											end
											if (v343 == 0) then
												v79 = v79 + (2 - 1);
												v344 = v75[v79];
												v343 = 1203 - (373 + 829);
											end
										end
									end
									v85[v87[733 - (476 + (1595 - (1093 + 247)))]] = v29(v140, v141, v62);
								else
									local v144 = v87[1132 - (369 + 761)];
									local v145, v146 = v78(v85[v144](v13(v85, v144 + 1 + 0, v87[3])));
									v80 = (v146 + v144) - ((1 + 0) - 0);
									local v147 = 0;
									for v345 = v144, v80 do
										local v346 = 0 - 0;
										while true do
											if ((1875 < 2258) and (v346 == 0)) then
												v147 = v147 + (239 - (7 + 57 + (690 - 516)));
												v85[v345] = v145[v147];
												break;
											end
										end
									end
								end
							elseif ((1173 > 41) and (v88 <= (2 + 9))) then
								if (v88 <= (12 - 3)) then
									if ((v88 == ((1167 - 823) - (144 + 192))) or (56 >= 3208)) then
										local v148 = 216 - (42 + 174);
										local v149;
										local v150;
										local v151;
										while true do
											if ((4313 > 3373) and (v148 == ((0 - 0) + 0))) then
												v149 = v87[2 + 0];
												v150 = {v85[v149](v13(v85, v149 + (1505 - (363 + 1141)), v87[1583 - (1183 + 397)]))};
												v148 = 2 - 1;
											end
											if ((1090 <= 4827) and (v148 == ((2 - 1) + 0))) then
												v151 = 0;
												for v507 = v149, v87[4] do
													local v508 = 0 + 0;
													while true do
														if ((v508 == ((703 + 1272) - (1913 + 62))) or (4493 == 2225) or (239 > 1345)) then
															v151 = v151 + 1 + 0;
															v85[v507] = v150[v151];
															break;
														end
													end
												end
												break;
											end
										end
									else
										local v152 = v87[5 - 3];
										local v153, v154 = v78(v85[v152](v13(v85, v152 + ((7450 - 5516) - (565 + 1368)), v87[11 - 8])));
										v80 = (v154 + v152) - (1662 - ((5090 - 3613) + 139 + 45));
										local v155 = 0 - 0;
										for v347 = v152, v80 do
											v155 = v155 + 1 + 0;
											v85[v347] = v153[v155];
										end
									end
								elseif (((3104 >= 3092) and (v88 == (866 - (564 + 292)))) or (3710 >= 3738)) then
									local v156 = v87[2 - 0];
									local v157 = v85[v156 + ((12 - 7) - 3)];
									local v158 = v85[v156] + v157;
									v85[v156] = v158;
									if ((3548 > 3098) and (v157 > (304 - (244 + (748 - (364 + 324)))))) then
										if ((v158 <= v85[v156 + 1 + 0]) or (3252 == 503)) then
											v79 = v87[479 - (41 + 435)];
											v85[v156 + (1004 - (938 + 63))] = v158;
										end
									elseif (((4733 > 2066) and (v158 >= v85[v156 + 1 + 0])) or (3838 < 2061)) then
										local v511 = 0;
										while true do
											if (v511 == 0) then
												v79 = v87[1128 - (936 + 189)];
												v85[v156 + 1 + 2] = v158;
												break;
											end
										end
									end
								else
									do
										return v85[v87[1615 - (1565 + 48)]];
									end
								end
							elseif (v88 <= (9 + 4)) then
								if ((v88 == (1150 - (782 + 356))) or (690 > 1172)) then
									v85[v87[(737 - 468) - (176 + 91)]] = v85[v87[7 - 4]] * v85[v87[5 - 1]];
								elseif (not v85[v87[(2625 - 1531) - (975 + 117)]] or (1592 > 2599)) then
									v79 = v79 + (1876 - (157 + 1718));
								else
									v79 = v87[3];
								end
							elseif ((3574 <= 4397) and (v88 <= (4 + 8 + 2))) then
								if ((3135 > 1330) and (v85[v87[2]] == v87[14 - 10])) then
									v79 = v79 + (3 - 2);
								else
									v79 = v87[1021 - (697 + 321)];
								end
							elseif (v88 > (40 - 25)) then
								v85[v87[3 - 1]] = v85[v87[6 - 3]] % v87[2 + 2];
							else
								v85[v87[3 - 1]] = v87[3];
							end
						elseif ((3549 >= 916) and (v88 <= (64 - 40))) then
							if (v88 <= (1247 - ((1347 - 1025) + 905))) then
								if (v88 <= (629 - (602 + 9))) then
									if ((v88 > (1206 - (449 + 740))) or (3900 <= 3641)) then
										v85[v87[874 - (826 + (73 - 27))]] = v85[v87[950 - ((744 - 499) + 702)]] + v85[v87[4]];
									else
										local v162 = 0 - 0;
										local v163;
										local v164;
										local v165;
										local v166;
										while true do
											if (v162 == (1 + 1)) then
												for v512 = v163, v80 do
													v166 = v166 + 1;
													v85[v512] = v164[v166];
												end
												break;
											end
											if ((1724 == 1724) and (v162 == (1899 - (260 + (2906 - (1249 + 19)))))) then
												v80 = (v165 + v163) - 1;
												v166 = 0;
												v162 = 442 - (382 + 58);
											end
											if ((455 <= 1282) and (v162 == (0 - 0))) then
												v163 = v87[2 + 0 + 0];
												v164, v165 = v78(v85[v163]());
												v162 = 1;
											end
										end
									end
								elseif ((v88 == (38 - 19)) or (2189 <= 245)) then
									v85[v87[7 - 5]] = v87[(1094 - (686 + 400)) - 5] + v85[v87[4 + 0]];
								else
									v85[v87[1207 - (902 + 303)]] = v62[v87[3]];
								end
							elseif ((4606 < 4876) and (v88 <= (47 - 25))) then
								if ((v88 == 21) or (1389 > 3925)) then
									v85[v87[4 - (231 - (73 + 156))]] = v85[v87[1 + 2]] * v87[1694 - (1121 + 569)];
								else
									local v171 = v87[216 - (22 + 192)];
									v85[v171] = v85[v171](v13(v85, v171 + (684 - (483 + 200)), v87[3]));
								end
							elseif (v88 > (1486 - (1404 + 59))) then
								if (v85[v87[5 - 3]] == v85[v87[4 - 0]]) then
									v79 = v79 + 1;
								else
									v79 = v87[3];
								end
							elseif (v85[v87[767 - (468 + 297)]] or (1442 > 2640)) then
								v79 = v79 + (563 - (334 + 228));
							else
								v79 = v87[(1 + 9) - 7];
							end
						elseif ((136 < 3668) and (v88 <= (64 - 36))) then
							if ((v88 <= ((857 - (721 + 90)) - (1 + 19))) or (1784 > 4781)) then
								if (v88 > 25) then
									local v173 = (0 - 0) + 0;
									local v174;
									local v175;
									local v176;
									local v177;
									while true do
										if ((238 - ((611 - (224 + 246)) + 95)) == v173) then
											for v515 = v174, v80 do
												local v516 = 0;
												while true do
													if ((4169 >= 3081) and (v516 == (0 + 0))) then
														v177 = v177 + (2 - 1);
														v85[v515] = v175[v177];
														break;
													end
												end
											end
											break;
										end
										if (v173 == (2 - 1)) then
											v80 = (v176 + v174) - (1 + 0);
											v177 = 0;
											v173 = (8 - 3) - (5 - 2);
										end
										if (v173 == (0 + 0)) then
											v174 = v87[2 + 0];
											v175, v176 = v78(v85[v174](v13(v85, v174 + (1 - 0), v80)));
											v173 = 1 + 0;
										end
									end
								else
									local v178 = v87[165 - (92 + 71)];
									local v179 = {};
									for v350 = 1 + 0, #v84 do
										local v351 = v84[v350];
										for v402 = 0 - 0, #v351 do
											local v403 = 765 - (574 + 191);
											local v404;
											local v405;
											local v406;
											while true do
												if (v403 == (0 + 0)) then
													v404 = v351[v402];
													v405 = v404[1];
													v403 = 2 - 1;
												end
												if (v403 == (1 + 0 + 0)) then
													v406 = v404[851 - (254 + 595)];
													if ((v405 == v85) and (v406 >= v178)) then
														local v569 = 126 - (55 + 71);
														while true do
															if (v569 == (0 - 0)) then
																v179[v406] = v405[v406];
																v404[1791 - (573 + 1217)] = v179;
																break;
															end
														end
													end
													break;
												end
											end
										end
									end
								end
							elseif ((4585 > 3298) and (v88 == (74 - 47))) then
								if ((349 <= 894) and (v85[v87[2]] ~= v87[1 + 3])) then
									v79 = v79 + 1;
								else
									v79 = v87[4 - 1];
								end
							else
								local v180 = v87[941 - (714 + 225)];
								local v181 = v85[v180];
								local v182 = v85[v180 + (5 - 3)];
								if ((731 <= 2978) and (v182 > 0)) then
									if ((v181 > v85[v180 + 1]) or (892 > 3892) or (1664 > 1698)) then
										v79 = v87[3 - 0];
									else
										v85[v180 + 1 + 2] = v181;
									end
								elseif ((v181 < v85[v180 + (1 - 0)]) or (3427 < 2849)) then
									v79 = v87[809 - (118 + 688)];
								else
									v85[v180 + (51 - (25 + 23))] = v181;
								end
							end
						elseif ((v88 <= 30) or (4466 == 900)) then
							if ((3616 <= 4429) and (v88 == (6 + 23))) then
								v85[v87[1888 - (927 + 959)]] = v87[3] ~= (0 - 0);
							else
								local v184 = v87[2];
								local v185, v186 = v78(v85[v184](v85[v184 + (733 - (1 + 15 + 716))]));
								v80 = (v186 + v184) - (1 - 0);
								local v187 = 97 - (11 + 86);
								for v352 = v184, v80 do
									local v353 = 0;
									while true do
										if ((v353 == 0) or (2084 >= 2888)) then
											v187 = v187 + (2 - (1 + 0));
											v85[v352] = v185[v187];
											break;
										end
									end
								end
							end
						elseif ((3988 >= 66) and (479 < 1863) and (v88 <= 31)) then
							local v188 = v87[2];
							local v189 = v87[289 - (175 + 110)];
							local v190 = v188 + (4 - 2);
							local v191 = {v85[v188](v85[v188 + 1], v85[v190])};
							for v354 = 1, v189 do
								v85[v190 + v354] = v191[v354];
							end
							local v192 = v191[1];
							if v192 then
								v85[v190] = v192;
								v79 = v87[1799 - (503 + 1293)];
							else
								v79 = v79 + (2 - (1 - 0));
							end
						elseif (v88 == ((79 - 55) + 8)) then
							if (v85[v87[(1576 - (203 + 310)) - (810 + 251)]] ~= v85[v87[3 + 1]]) then
								v79 = v79 + 1 + 0;
							else
								v79 = v87[3 + 0];
							end
						else
							do
								return v85[v87[535 - (43 + 490)]];
							end
						end
					elseif ((v88 <= (783 - (711 + 22))) or (862 > 4644)) then
						if (v88 <= 41) then
							if (v88 <= (142 - 105)) then
								if ((1221 == 1221) and (v88 <= (894 - (240 + 619)))) then
									if ((v88 == (9 + 25)) or (45 > 1271)) then
										v85[v87[2 - 0]] = v85[v87[(1994 - (1238 + 755)) + 2]] + v87[4];
									else
										local v194 = v85[v87[4]];
										if ((3877 > 1530) and not v194) then
											v79 = v79 + 1 + 0;
										else
											v85[v87[2]] = v194;
											v79 = v87[1747 - (1344 + 400)];
										end
									end
								elseif ((v88 == ((1975 - (709 + 825)) - (255 + 150))) or (4798 == 1255)) then
									local v195 = v87[2 + 0];
									v85[v195](v13(v85, v195 + 1 + 0, v87[12 - 9]));
								else
									local v196 = v76[v87[(15 - 6) - 6]];
									local v197;
									local v198 = {};
									v197 = v10({}, {__index=function(v357, v358)
										local v359 = v198[v358];
										return v359[1740 - (404 + 1335)][v359[408 - (183 + 223)]];
									end,__newindex=function(v360, v361, v362)
										local v363 = 0 - 0;
										local v364;
										while true do
											if (v363 == 0) then
												v364 = v198[v361];
												v364[1 + 0][v364[1 + 1]] = v362;
												break;
											end
										end
									end});
									for v365 = 338 - (10 + 327), v87[(3 - 0) + 1] do
										local v366 = 0;
										local v367;
										while true do
											if (((338 - (118 + 220)) == v366) or (2541 > 2860)) then
												v79 = v79 + 1 + 0;
												v367 = v75[v79];
												v366 = (1314 - (196 + 668)) - (108 + 341);
											end
											if ((1 + 0) == v366) then
												if ((v367[4 - 3] == (1568 - (711 + 782))) or (2902 > 3629)) then
													v198[v365 - (1 - 0)] = {v85,v367[1822 - (580 + 1239)]};
												else
													v198[v365 - 1] = {v61,v367[3]};
												end
												v84[#v84 + 1 + (0 - 0)] = v198;
												break;
											end
										end
									end
									v85[v87[1 + 1]] = v29(v196, v197, v62);
								end
							elseif ((v88 <= (17 + 22)) or (2428 >= 4038)) then
								if (v88 == (98 - 60)) then
									if (v85[v87[2 + 0]] < v85[v87[1171 - (645 + 522)]]) then
										v79 = v87[1793 - (1010 + 780)];
									else
										v79 = v79 + 1 + 0;
									end
								else
									v85[v87[9 - 7]] = {};
								end
							elseif ((427 < 3468) and (v88 == (117 - (159 - 82)))) then
								v85[v87[(2671 - (171 + 662)) - ((1138 - (4 + 89)) + 791)]] = v61[v87[(24 - 17) - 4]];
							else
								local v203 = 0 - 0;
								local v204;
								while true do
									if ((v203 == 0) or (2878 > 2897)) then
										v204 = v87[507 - (351 + 154)];
										v85[v204] = v85[v204](v13(v85, v204 + ((574 + 1001) - (1281 + 293)), v87[269 - (28 + 238)]));
										break;
									end
								end
							end
						elseif ((4190 >= 2804) and (v88 <= 45)) then
							if ((2086 == 2086) and (v88 <= (95 - 52))) then
								if (v88 == 42) then
									local v205 = 0;
									local v206;
									local v207;
									while true do
										if (v205 == (1559 - (1381 + 178))) then
											v206 = v87[(8 - 6) + 0];
											v207 = v85[v87[3 + 0]];
											v205 = 1 + 0 + 0;
										end
										if (v205 == (3 - 2)) then
											v85[v206 + 1 + (1486 - (35 + 1451))] = v207;
											v85[v206] = v207[v85[v87[4]]];
											break;
										end
									end
								else
									v85[v87[472 - ((1834 - (28 + 1425)) + 89)]][v87[3]] = v85[v87[4 + 0]];
								end
							elseif ((v88 > (30 + (2007 - (941 + 1052)))) or (2469 > 3676)) then
								do
									return v85[v87[2 - 0]]();
								end
							else
								local v210 = 0;
								local v211;
								while true do
									if ((4148 > 2733) and (v210 == (0 + 0))) then
										v211 = v87[1158 - (1074 + 82)];
										v85[v211](v85[v211 + (1 - 0)]);
										break;
									end
								end
							end
						elseif (v88 <= ((3345 - (822 + 692)) - (214 + (2241 - 671)))) then
							if ((233 < 487) and (v88 > 46)) then
								v85[v87[1457 - (990 + 465)]][v87[2 + 1 + 0]] = v85[v87[4]];
							else
								v85[v87[2]] = v85[v87[(299 - (45 + 252)) + 1]] * v87[4];
							end
						elseif ((3054 >= 1605) and (2473 >= 201) and (v88 <= (47 + 1))) then
							local v215 = v87[7 - 5];
							local v216 = {v85[v215](v13(v85, v215 + (627 - (512 + 114)), v87[7 - 4]))};
							local v217 = 0 - 0;
							for v368 = v215, v87[13 - 9] do
								v217 = v217 + 1 + 0;
								v85[v368] = v216[v217];
							end
						elseif ((4120 >= 133) and (v88 > (10 + 39))) then
							v85[v87[2 + 0]] = v85[v87[10 - (7 + 0)]] / v87[1998 - (38 + 71 + 1885)];
						else
							v79 = v87[1472 - (1269 + 200)];
						end
					elseif (v88 <= (112 - 53)) then
						if ((3080 >= 1986) and (v88 <= (869 - (98 + 717)))) then
							if ((v88 <= 52) or (1439 > 3538)) then
								if ((1044 < 1519) and (v88 == (877 - (802 + 24)))) then
									if (v85[v87[2 - 0]] == v85[v87[4 - 0]]) then
										v79 = v79 + 1 + 0;
									else
										v79 = v87[7 - 4];
									end
								else
									local v218 = v87[2 + (433 - (114 + 319))];
									do
										return v85[v218](v13(v85, v218 + 1 + 0, v87[1 + 2]));
									end
								end
							elseif ((1707 <= 4200) and ((v88 == (147 - 94)) or (419 < 7))) then
								local v219 = v87[6 - 4];
								local v220 = v85[v87[(2 - 0) + 1]];
								v85[v219 + 1] = v220;
								v85[v219] = v220[v87[2 + 2]];
							else
								v85[v87[2 + 0]] = v85[v87[3 + 0]];
							end
						elseif (v88 <= (27 + 29)) then
							if (v88 > (1488 - (797 + 636))) then
								local v226 = 0;
								local v227;
								while true do
									if ((580 == 580) and (v226 == 0)) then
										v227 = v87[9 - 7];
										do
											return v13(v85, v227, v80);
										end
										break;
									end
								end
							elseif (v85[v87[1621 - (1427 + 192)]] < v85[v87[2 + 2]]) then
								v79 = v79 + (1 - 0);
							else
								v79 = v87[6 - (2 + 1)];
							end
						elseif ((601 <= 999) and (v88 <= (52 + 5))) then
							v85[v87[2 - 0]] = v87[2 + 1];
						elseif ((3970 == 3970) and (v88 == (384 - (192 + 134)))) then
							do
								return;
							end
						else
							do
								return;
							end
						end
					elseif ((v88 <= (1339 - (316 + 960))) or (98 == 208)) then
						if ((2006 <= 3914) and (v88 <= (34 + 27))) then
							if (v88 > (47 + 13)) then
								v85[v87[2]][v85[v87[3 + 0]]] = v85[v87[15 - (22 - 11)]];
							else
								v85[v87[553 - (83 + 468)]] = v87[1809 - (1202 + 604)] + v85[v87[18 - 14]];
							end
						elseif (v88 > (102 - 40)) then
							v85[v87[2]] = v61[v87[8 - 5]];
						elseif (v87[327 - (45 + (2243 - (556 + 1407)))] <= v85[v87[4 + 0]]) then
							v79 = v79 + 1 + 0;
						else
							v79 = v87[2 + 1];
						end
					elseif (v88 <= (36 + (1235 - (741 + 465)))) then
						if (v88 > (12 + 52)) then
							do
								return v85[v87[(468 - (170 + 295)) - 1]]();
							end
						elseif (v87[1913 - (340 + 1571)] < v85[v87[2 + 2 + 0]]) then
							v79 = v79 + (1773 - (1733 + 39));
						else
							v79 = v87[8 - 5];
						end
					elseif (v88 <= 66) then
						v85[v87[(952 + 84) - (125 + 909)]] = v85[v87[1951 - ((2698 - 1602) + 852)]] - v85[v87[2 + 2]];
					elseif (v88 > (95 - 28)) then
						if ((v85[v87[2 + 0]] <= v85[v87[4]]) or (3101 <= 2971)) then
							v79 = v79 + (513 - (409 + 103));
						else
							v79 = v87[239 - (46 + 158 + 32)];
						end
					else
						local v419 = 95 - (51 + 29 + 15);
						local v420;
						while true do
							if ((v419 == (0 + 0 + 0)) or (2073 <= 671)) then
								v420 = v87[(2549 - (957 + 273)) - (1114 + 203)];
								v85[v420] = v85[v420](v85[v420 + 1]);
								break;
							end
						end
					end
				elseif (v88 <= (829 - (228 + 498))) then
					if ((3305 > 95) and (v88 <= (23 + 62))) then
						if (v88 <= (17 + 59)) then
							if ((2727 == 2727) and (v88 <= (40 + 32))) then
								if (((2820 == 2820) and (v88 <= 70)) or (2970 >= 4072)) then
									if (v88 == (732 - (174 + 489))) then
										v61[v87[(3 + 4) - 4]] = v85[v87[1907 - (830 + 1075)]];
									elseif (v85[v87[526 - ((1154 - 851) + 221)]] ~= v87[10 - 6]) then
										v79 = v79 + (1270 - (231 + 1038));
									else
										v79 = v87[3];
									end
								elseif ((v88 == (60 + 11)) or (4362 <= 3527)) then
									v79 = v87[3];
								elseif (v85[v87[2]] < v85[v87[(3561 - 2395) - (171 + 991)]]) then
									v79 = v79 + (4 - 3);
								else
									v79 = v87[7 - 4];
								end
							elseif (v88 <= (184 - 110)) then
								if ((2613 <= 2680) and (v88 == (59 + 14))) then
									v85[v87[6 - 4]] = #v85[v87[8 - 5]];
								else
									v85[v87[2]] = v85[v87[3]] * v85[v87[5 - 1]];
								end
							elseif ((v88 > (231 - 156)) or (1482 >= 4288)) then
								local v241 = v87[1250 - ((549 - 438) + (2917 - (389 + 1391)))];
								local v242 = {};
								for v371 = 159 - (91 + 67), #v84 do
									local v372 = v84[v371];
									for v423 = 0, #v372 do
										local v424 = 0 - (0 + 0);
										local v425;
										local v426;
										local v427;
										while true do
											if (v424 == (1 + 0)) then
												v427 = v425[525 - (423 + 100)];
												if ((v426 == v85) and (v427 >= v241)) then
													v242[v427] = v426[v427];
													v425[1 + 0] = v242;
												end
												break;
											end
											if ((3881 > 814) and (v424 == ((0 + 0) - 0))) then
												v425 = v372[v423];
												v426 = v425[1 + 0];
												v424 = (1757 - 985) - (326 + 445);
											end
										end
									end
								end
							else
								v85[v87[8 - 6]] = v85[v87[6 - 3]];
							end
						elseif ((v88 <= (186 - 106)) or (2462 > 4426)) then
							if (v88 <= (789 - (530 + 181))) then
								if ((4774 == 4774) and (v88 == (958 - ((1565 - (783 + 168)) + 267)))) then
									local v245 = v87[34 - (19 + 13)];
									local v246 = {v85[v245](v13(v85, v245 + (2 - 1), v80))};
									local v247 = 0 - 0;
									for v373 = v245, v87[2 + 2] do
										v247 = v247 + 1;
										v85[v373] = v246[v247];
									end
								else
									v85[v87[2]] = v85[v87[4 - 1]][v87[7 - 3]];
								end
							elseif ((v88 == (1891 - ((4339 - 3046) + 511 + 8))) or (4932 < 4868)) then
								local v250 = v87[(314 - (309 + 2)) - 1];
								v85[v250] = v85[v250](v13(v85, v250 + (2 - 1), v80));
							else
								v85[v87[3 - 1]] = v85[v87[12 - 9]] % v85[v87[9 - (15 - 10)]];
							end
						elseif (v88 <= 82) then
							if (v88 == (43 + 38)) then
								local v253 = v87[1 + 1];
								v85[v253](v13(v85, v253 + ((1214 - (1090 + 122)) - 1), v87[1 + 2]));
							else
								v85[v87[1 + 1]][v85[v87[3]]] = v87[2 + 2];
							end
						elseif ((566 <= 960) and (v88 <= (52 + 31))) then
							if not v85[v87[1098 - (709 + 387)]] then
								v79 = v79 + (1859 - (673 + 1185));
							else
								v79 = v87[3];
							end
						elseif (v88 > 84) then
							local v429 = v87[2];
							v85[v429] = v85[v429]();
						else
							v85[v87[5 - 3]] = v85[v87[9 - 6]][v85[v87[13 - 9]]];
						end
					elseif (v88 <= (154 - 60)) then
						if (v88 <= 89) then
							if (v88 <= 87) then
								if ((3667 <= 4802) and ((v88 > (62 + 24)) or (2910 <= 1930))) then
									local v256 = 0 + 0;
									local v257;
									while true do
										if (v256 == (0 - 0)) then
											v257 = v87[2];
											v85[v257](v85[v257 + 1]);
											break;
										end
									end
								else
									v85[v87[1 + 1]][v85[v87[3]]] = v87[7 - 3];
								end
							elseif (v88 == (172 - 84)) then
								v85[v87[2]]();
							else
								v85[v87[1882 - (446 + 1434)]] = v62[v87[1286 - (1040 + 243)]];
							end
						elseif ((v88 <= (271 - 180)) or (19 > 452)) then
							if (v88 > 90) then
								if (v87[1849 - (559 + 1288)] < v85[v87[1935 - (609 + 1322)]]) then
									v79 = v79 + (455 - (13 + 441));
								else
									v79 = v87[10 - 7];
								end
							else
								local v262 = 0;
								local v263;
								local v264;
								while true do
									if (v262 == (0 - 0)) then
										v263 = v87[9 - 7];
										v264 = v85[v263];
										v262 = 1 + 0;
									end
									if ((1260 >= 858) and ((v262 == (3 - 2)) or (907 > 3152))) then
										for v529 = v263 + 1 + 0 + 0, v87[2 + 1] do
											v7(v264, v85[v529]);
										end
										break;
									end
								end
							end
						elseif (v88 <= (273 - 181)) then
							if (v85[v87[2 + 0]] < v85[v87[7 - (1121 - (628 + 490))]]) then
								v79 = v87[2 + 1];
							else
								v79 = v79 + 1;
							end
						elseif (v88 > 93) then
							v85[v87[2 + 0]] = v29(v76[v87[1 + 2 + 0]], nil, v62);
						else
							local v436 = v87[2 + (0 - 0)];
							local v437 = v85[v87[(13 - 10) + 0]];
							v85[v436 + (434 - (153 + 280))] = v437;
							v85[v436] = v437[v85[v87[11 - 7]]];
						end
					elseif ((v88 <= (88 + 10)) or (3911 == 4700)) then
						if (v88 <= (38 + 58)) then
							if (v88 == 95) then
								local v265 = v87[2];
								local v266, v267 = v78(v85[v265](v85[v265 + 1 + 0]));
								v80 = (v267 + v265) - 1;
								local v268 = 0;
								for v376 = v265, v80 do
									v268 = v268 + (775 - (431 + 343));
									v85[v376] = v266[v268];
								end
							else
								v85[v87[2]] = v85[v87[3 + 0]] % v87[3 + 1];
							end
						elseif ((v88 > 97) or (2505 > 4470)) then
							local v270 = (0 - 0) - (0 - 0);
							local v271;
							local v272;
							while true do
								if ((3000 < 4194) and (v270 == (0 + 0))) then
									v271 = v87[669 - (89 + 578)];
									v272 = v85[v87[3 + 0]];
									v270 = 1 - 0;
								end
								if (v270 == (1050 - (572 + 477))) then
									v85[v271 + 1 + 0 + 0] = v272;
									v85[v271] = v272[v87[3 + 1]];
									break;
								end
							end
						else
							v85[v87[1 + 1]] = v87[89 - (84 + 2)] ~= (0 - 0);
							v79 = v79 + 1;
						end
					elseif ((651 < 4442) and (v88 <= 100)) then
						if ((v88 == 99) or (3711 > 4062)) then
							v85[v87[2 + 0]] = v87[(109 + 736) - (497 + 345)] ~= (0 + 0);
						else
							local v275 = v87[1 + 1];
							do
								return v13(v85, v275, v275 + v87[1336 - (605 + 728)]);
							end
						end
					elseif ((420 == 420) and (v88 <= (73 + 28))) then
						v85[v87[2]] = v85[v87[6 - 3]] / v87[1 + 3];
					elseif ((v88 == (377 - 275)) or (33 >= 3494)) then
						local v441 = 0 + 0;
						local v442;
						while true do
							if (v441 == (0 - 0)) then
								v442 = v87[2 + 0];
								v85[v442] = v85[v442]();
								break;
							end
						end
					elseif ((v85[v87[2]] ~= v85[v87[493 - (457 + 32)]]) or (1267 == 4744)) then
						v79 = v79 + 1 + 0;
					else
						v79 = v87[1405 - (832 + 570)];
					end
				elseif ((2428 < 3778) and (v88 <= (114 + 6))) then
					if (v88 <= (29 + 82)) then
						if (v88 <= (378 - (1966 - (556 + 1139)))) then
							if ((v88 <= 105) or (195 >= 1804)) then
								if (v88 > (51 + (68 - (6 + 9)))) then
									v85[v87[2]] = v87[799 - (588 + 208)] ~= 0;
									v79 = v79 + ((1 + 1) - 1);
								else
									v85[v87[1802 - (884 + 916)]] = v85[v87[3]][v87[8 - 4]];
								end
							elseif (v88 == (62 + 44)) then
								local v280 = v87[655 - (232 + 421)];
								local v281 = {v85[v280](v13(v85, v280 + 1 + 0, v80))};
								local v282 = 0;
								for v379 = v280, v87[1 + 3] do
									v282 = v282 + 1;
									v85[v379] = v281[v282];
								end
							else
								local v283 = 0 - 0;
								local v284;
								while true do
									if (v283 == (605 - (162 + 154 + 289))) then
										v284 = v85[v87[10 - 6]];
										if not v284 then
											v79 = v79 + 1 + 0;
										else
											local v548 = 1453 - (666 + 787);
											while true do
												if ((v548 == ((594 - (28 + 141)) - (360 + 26 + 39))) or (1382 > 2216)) then
													v85[v87[2]] = v284;
													v79 = v87[3 - 0];
													break;
												end
											end
										end
										break;
									end
								end
							end
						elseif (v88 <= (73 + 29 + 7)) then
							if ((v88 > (362 - (79 + 175))) or (2946 <= 1596) or (2861 == 2459)) then
								for v382 = v87[2 - 0], v87[3 + 0] do
									v85[v382] = nil;
								end
							else
								v85[v87[5 - 3]][v87[5 - 2]] = v87[4];
							end
						elseif (v88 == (1009 - (503 + (1713 - (486 + 831))))) then
							if ((4433 > 3127) and (v87[2] == v85[v87[185 - (92 + 89)]])) then
								v79 = v79 + (2 - 1);
							else
								v79 = v87[3];
							end
						else
							v85[v87[2]][v85[v87[5 - 2]]] = v85[v87[3 + 1]];
						end
					elseif ((1903 < 4021) and (v88 <= (69 + 46))) then
						if ((v88 <= (442 - (1157 - 828))) or (2270 >= 4130)) then
							if (v88 == (16 + 96)) then
								local v289 = v87[4 - 2];
								v85[v289] = v85[v289](v13(v85, v289 + 1 + 0, v80));
							else
								local v291 = 0 + 0;
								local v292;
								while true do
									if ((2593 <= 3958) and (4300 >= 2733) and (v291 == (0 - 0))) then
										v292 = v87[1 + 0 + 1];
										v85[v292] = v85[v292](v85[v292 + 1]);
										break;
									end
								end
							end
						elseif (v88 == 114) then
							local v293 = v87[2];
							local v294, v295 = v78(v85[v293]());
							v80 = (v295 + v293) - 1;
							local v296 = 0 - 0;
							for v384 = v293, v80 do
								v296 = v296 + ((3936 - 2691) - (485 + 759));
								v85[v384] = v294[v296];
							end
						elseif (v85[v87[2]] <= v85[v87[8 - 4]]) then
							v79 = v79 + (1190 - (442 + 747));
						else
							v79 = v87[1138 - (832 + 303)];
						end
					elseif ((4829 == 4829) and (v88 <= 117)) then
						if (v88 == ((2325 - (668 + 595)) - (88 + 858))) then
							v85[v87[1 + 1]] = {};
						else
							v85[v87[2 + 0]][v87[1 + 2]] = v87[793 - (766 + 23)];
						end
					elseif ((1176 == 1176) and (v88 <= (582 - 464))) then
						for v387 = v87[2], v87[3 - 0] do
							v85[v387] = nil;
						end
					elseif (v88 == (313 - 194)) then
						v85[v87[6 - 4]] = v85[v87[3]] - v85[v87[4]];
					else
						v85[v87[1075 - (1036 + 34 + 3)]] = v85[v87[3 + 0]] + v85[v87[1 + 3]];
					end
				elseif (v88 <= (250 - 121)) then
					if (v88 <= (98 + (70 - 44))) then
						if (v88 <= (1602 - (641 + 839))) then
							if ((1683 <= 4726) and (v88 == 121)) then
								v85[v87[2]] = v85[v87[916 - (910 + 3)]][v85[v87[9 - 5]]];
							else
								local v302 = v87[1686 - (1466 + 218)];
								local v303 = v87[294 - (23 + 267)];
								local v304 = v302 + 1 + 1;
								local v305 = {v85[v302](v85[v302 + 1 + 0], v85[v304])};
								for v389 = 809 - ((716 - (371 + 16)) + 479), v303 do
									v85[v304 + v389] = v305[v389];
								end
								local v306 = v305[855 - (174 + 680)];
								if (v306 or (3062 == 1818)) then
									v85[v304] = v306;
									v79 = v87[10 - 7];
								else
									v79 = v79 + 1;
								end
							end
						elseif ((4835 >= 3669) and (v88 == (254 - 131))) then
							local v307 = 0 + 0;
							local v308;
							local v309;
							local v310;
							while true do
								if ((2851 > 1859) and (v307 == (739 - (396 + 343)))) then
									v308 = v87[(1751 - (1326 + 424)) + 1];
									v309 = v85[v308];
									v307 = (2799 - 1321) - (29 + 1448);
								end
								if ((1390 - (135 + 1254)) == v307) then
									v310 = v85[v308 + 2];
									if (v310 > 0) then
										if (v309 > v85[v308 + (3 - 2)]) then
											v79 = v87[13 - 10];
										else
											v85[v308 + 3] = v309;
										end
									elseif (v309 < v85[v308 + 1 + 0]) then
										v79 = v87[(5591 - 4061) - (389 + 1138)];
									else
										v85[v308 + (121 - (88 + 30))] = v309;
									end
									break;
								end
							end
						else
							local v311 = v87[2];
							do
								return v85[v311](v13(v85, v311 + (575 - (102 + (1243 - (720 + 51)))), v87[3 + 0]));
							end
						end
					elseif (v88 <= 126) then
						if ((v88 == 125) or (3717 < 3149)) then
							local v312 = 0 + 0;
							local v313;
							while true do
								if (v312 == (0 + 0)) then
									v313 = v87[(3441 - 1894) - (320 + 1225)];
									v85[v313](v13(v85, v313 + (1 - 0), v80));
									break;
								end
							end
						else
							local v314 = v87[2 + 0];
							do
								return v13(v85, v314, v80);
							end
						end
					elseif ((3848 > 2323) and (v88 <= (1591 - (157 + 1307)))) then
						v85[v87[1861 - (821 + 1038)]]();
					elseif (v88 > (319 - 191)) then
						local v449 = 0 + (1776 - (421 + 1355));
						local v450;
						local v451;
						local v452;
						local v453;
						while true do
							if (v449 == 0) then
								v450 = v87[2];
								v451, v452 = v78(v85[v450](v13(v85, v450 + (1 - 0), v80)));
								v449 = 1 - 0;
							end
							if ((1 + 0) == v449) then
								v80 = (v452 + v450) - (2 - 1);
								v453 = 1026 - (410 + 424 + 192);
								v449 = 1 + 1;
							end
							if (v449 == (1 + 1)) then
								for v557 = v450, v80 do
									v453 = v453 + 1;
									v85[v557] = v451[v453];
								end
								break;
							end
						end
					else
						v85[v87[1 + 1]] = v85[v87[3]] % v85[v87[5 - 1]];
					end
				elseif ((3195 < 3730) and (v88 <= (437 - (300 + (1087 - (286 + 797)))))) then
					if (v88 <= (35 + 96)) then
						if (v88 > 130) then
							v85[v87[5 - 3]] = v29(v76[v87[365 - (112 + 250)]], nil, v62);
						else
							local v316 = v87[(7 - 5) + 1];
							local v317 = v85[v316];
							for v392 = v316 + (2 - 1), v87[3 + 1] do
								v317 = v317 .. v85[v392];
							end
							v85[v87[2]] = v317;
						end
					elseif (v88 == (69 + 63)) then
						local v319 = 0 + 0;
						local v320;
						local v321;
						local v322;
						while true do
							if ((2836 > 469) and (v319 == (0 + 0))) then
								v320 = v87[2];
								v321 = v85[v320];
								v319 = 1 + (0 - 0);
							end
							if ((2797 <= 3980) and (v319 == (1415 - (1001 + 413)))) then
								v322 = v87[6 - 3];
								for v531 = (1322 - (397 + 42)) - (244 + 638), v322 do
									v321[v531] = v85[v320 + v531];
								end
								break;
							end
						end
					else
						local v323 = 693 - (627 + 66);
						local v324;
						local v325;
						local v326;
						while true do
							if ((1944 <= 2368) and ((0 - 0) == v323)) then
								v324 = v87[604 - (512 + 90)];
								v325 = {v85[v324](v85[v324 + (718 - (373 + 344))])};
								v323 = 1 + 0;
							end
							if ((1709 < 4248) and (v323 == 1)) then
								v326 = 0;
								for v534 = v324, v87[4] do
									v326 = v326 + 1 + 0;
									v85[v534] = v325[v326];
								end
								break;
							end
						end
					end
				elseif ((v88 <= (356 - 221)) or (2096 <= 540)) then
					if (v88 > (226 - 92)) then
						local v327 = (1899 - (24 + 776)) - (35 + 1064);
						local v328;
						while true do
							if ((v327 == (0 + 0)) or (3183 < 2645)) then
								v328 = v87[4 - (2 - 0)];
								v85[v328](v13(v85, v328 + 1, v80));
								break;
							end
						end
					elseif (((3230 <= 3760) and v85[v87[1 + (786 - (222 + 563))]]) or (3970 == 3202)) then
						v79 = v79 + (1237 - (298 + 938));
					else
						v79 = v87[1262 - (233 + 1026)];
					end
				elseif ((v88 <= (1802 - (636 + 1030))) or (3918 >= 4397)) then
					if ((v85[v87[2 + 0]] == v87[4 + 0]) or (780 == 3185)) then
						v79 = v79 + 1;
					else
						v79 = v87[1 + 2];
					end
				elseif (v88 == (10 + 127)) then
					local v457 = 221 - (55 + (365 - 199));
					local v458;
					local v459;
					local v460;
					while true do
						if (((1 + 0) == v457) or (3202 >= 4075)) then
							v460 = v87[1 + 2];
							for v560 = 3 - 2, v460 do
								v459[v560] = v85[v458 + v560];
							end
							break;
						end
						if (v457 == (297 - (36 + 261))) then
							v458 = v87[3 - (1 + 0)];
							v459 = v85[v458];
							v457 = (1559 - (23 + 167)) - (34 + 1334);
						end
					end
				else
					v61[v87[3]] = v85[v87[2]];
				end
				v79 = v79 + 1 + 0;
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
